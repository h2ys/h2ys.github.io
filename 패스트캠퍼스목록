================================================================================================================================
한번에 끝내는 UX/UI 디자인

----------------------------------------------------------------
01. UX/UI 디자인 이해
학습의􀀁목적을􀀁어떻게􀀁잡아야􀀁할까요
어떻게􀀁커리어를􀀁쌓아􀀁나가야􀀁할까요
UX,􀀁UI,􀀁사용성,􀀁UCD는􀀁어떻게􀀁다른가요
UX.􀀁CX,􀀁BX는􀀁어떻게􀀁다른가요
Design􀀁Thinking􀀁이란􀀁무엇인가요
디자인􀀁작업을􀀁위한􀀁맥􀀁환경
어떻게􀀁디자인􀀁프로세스를􀀁만들어야􀀁할까요
왜􀀁비즈니스를􀀁이해해야􀀁하나요
어떻게􀀁비즈니스를􀀁이해할􀀁수􀀁있나요
어떻게􀀁비즈니스를􀀁정리할􀀁수􀀁있나요
비즈니스를􀀁위한􀀁데이터􀀁탐색
비즈니스􀀁목적에􀀁따라􀀁UX가􀀁어떻게􀀁다른가요
왜􀀁초기􀀁사용자가􀀁중요한가요
----------------------------------------------------------------
02. UX 유저 리서치
어떻게􀀁초기􀀁사용자를􀀁모델링􀀁할􀀁수􀀁있나요
어떻게􀀁퍼소나􀀁모델링을􀀁시작해야􀀁할까요
어떻게􀀁사용자􀀁조사를􀀁시작해야􀀁할까요
인터뷰는􀀁어떻게􀀁수행해야􀀁하나요
포토􀀁저널과􀀁일기􀀁조사는􀀁어떻게􀀁수행해야􀀁하나요
온라인􀀁설문􀀁조사는􀀁어떻게􀀁수행해야􀀁하나요
맥락􀀁조사는􀀁어떻게􀀁수행해야􀀁하나요
이해관계자를􀀁왜􀀁이해해야􀀁할까요
어떻게􀀁이해관계자의􀀁요구사항을􀀁수집할􀀁수􀀁있을까요
어떻게􀀁이해관계자의􀀁요구사항을􀀁어떻게􀀁정리해야􀀁할까요
----------------------------------------------------------------
03. UX 데이터 모델링
어떻게􀀁수집한􀀁데이터를􀀁의미있게􀀁분석할􀀁수􀀁있을까요
어떻게􀀁이해관계자􀀁간의􀀁관계를􀀁모델링􀀁할􀀁수􀀁있을까요
어떻게􀀁사용자의􀀁생각을􀀁모델링􀀁할􀀁수􀀁있을까요
어떻게􀀁사용자의􀀁경험을􀀁모델링􀀁할􀀁수􀀁있을까요
여정􀀁지도를􀀁어떻게􀀁활용할􀀁수􀀁있을까요
서비스􀀁디자인은􀀁무엇인가요
----------------------------------------------------------------
04. UX/UI 디자인 노하우
어떻게􀀁도출된􀀁기능을􀀁구조화􀀁해야􀀁할까요
어떻게􀀁내비게이션을􀀁만들어가야􀀁할까요
어떻게􀀁레이블을􀀁만들어가야􀀁할까요
어떻게􀀁빠르게􀀁사용성을􀀁평가하고􀀁분석할􀀁수􀀁있을까요
어떻게􀀁휴리스틱􀀁평가를􀀁해야할까요
어떻게􀀁경쟁􀀁및􀀁유사􀀁제품을􀀁벤치􀀁마킹할􀀁수􀀁있을까요
----------------------------------------------------------------
05. 모바일 UX
터치스크린􀀁UI는􀀁어떤􀀁특징이􀀁있나요?
왜􀀁픽셀􀀁밀도를􀀁알아야􀀁할까요?
앱􀀁아이콘은􀀁어떻게􀀁디자인해야􀀁하나요?
앱􀀁구조􀀁이해하기
사용자􀀁인터랙션􀀁이해하기
시스템􀀁가능􀀁기능􀀁이해하기
비주얼􀀁디자인􀀁이해하기
아이콘과􀀁이미지􀀁이해하기
바(Bar)􀀁이해하기
뷰(View)􀀁이해하기
컨트롤(Control)􀀁이해하기
익스텐션(Extension)􀀁이해하기
----------------------------------------------------------------
06. UI 클론디자인 iOS 앱
클론􀀁디자인􀀁시작하기
레이아웃과􀀁컴포넌트􀀁분석하기
iOS􀀁리소스와􀀁폰트􀀁설치하기
타이틀􀀁바􀀁만들기
카드􀀁만들기􀀁(1)
카드􀀁만들기􀀁(2)
카드􀀁만들기􀀁(3)
버튼􀀁만들기
탭􀀁바􀀁만들기
상세화면􀀁만들기
문단􀀁구조􀀁만들기
스크린샷􀀁만들기
푸터􀀁만들기
반응형􀀁버튼􀀁만들기
프린시플􀀁프로토타이핑􀀁만들기􀀁(1)
프린시플􀀁프로토타이핑􀀁만들기􀀁(2)
혼자서􀀁만들어보기
----------------------------------------------------------------
07. UI 클론디자인 Android 앱
매터리얼􀀁디자인􀀁이해하기
환경􀀁요소􀀁이해하기
레이아웃􀀁이해하기
내비게이션􀀁이해하기
컬러􀀁이해하기
타이포그래피􀀁이해하기
사운드􀀁이해하기
아이콘􀀁이해하기
쉐입􀀁이해하기
모션􀀁이해하기
인터랙션􀀁이해하기
커뮤니케이션􀀁이해하기
텍스트􀀁스타일􀀁만들기
앱􀀁바􀀁만들기
컨텐츠􀀁만들기
추천􀀁영화􀀁만들기
데이터􀀁연동하기
네비게이션􀀁바􀀁만들기
직접􀀁만들어􀀁보세요
----------------------------------------------------------------
08. UX/UI 심리학
왜􀀁심리학을􀀁이해해야􀀁하나요
심리학􀀁법칙에는􀀁어떤􀀁것들이􀀁있나요
게슈탈트􀀁심리학에는􀀁어떤􀀁것들이􀀁있나요
----------------------------------------------------------------
09. UI 클론디자인 Web
웹􀀁디자인􀀁구조􀀁파악하기
히어로􀀁섹션􀀁구조􀀁파악하기
웹􀀁그리드􀀁시스템􀀁이해하기
컨텐츠􀀁만들기
푸터􀀁만들기
----------------------------------------------------------------
10. 브랜딩 UX 디자인 시스템 구축
디자인􀀁시스템이􀀁무엇인가요
브랜드􀀁코어􀀁만들기
컴포넌트􀀁라이브러리􀀁만들기
----------------------------------------------------------------
11. 디자인 데이터 전달
디자인􀀁Hand-off가􀀁무엇인가요
어떻게􀀁디자인􀀁데이터를􀀁전달해야􀀁하나요
어떻게􀀁제플린을􀀁사용해야􀀁하나요
마블은􀀁어떤􀀁용도로􀀁사용하나요
개발된􀀁결과물을􀀁어떻게􀀁검수해야􀀁하나요
----------------------------------------------------------------
12. 사용성 평가
사용성􀀁테스트란􀀁무엇인가요
사용성􀀁테스트는􀀁어떻게􀀁준비해야􀀁하나요
사용성􀀁테스트􀀁시􀀁어떤􀀁점에􀀁유의헤야􀀁하나요
----------------------------------------------------------------
13. Data-Driven UX/UI
어떻게􀀁웹􀀁로그􀀁데이터를􀀁수집할􀀁수􀀁있을까요
어떤􀀁데이터를􀀁주로􀀁봐야할까요
----------------------------------------------------------------
14. 포트폴리오 가이드
포트폴리오􀀁작업􀀁시􀀁어떤􀀁점에􀀁유의해야􀀁하나요
포트폴리오에는􀀁어떤􀀁내용이􀀁들어가야􀀁하나요
----------------------------------------------------------------
15. Adobe XD
UI􀀁유형􀀁-􀀁대화형􀀁UI􀀁제작
UI􀀁유형􀀁-􀀁카드,􀀁리스트형􀀁UI
UI􀀁추출􀀁-􀀁포맷􀀁특징􀀁및􀀁UI􀀁추출􀀁방법(심화)
오브젝트􀀁위치􀀁고정􀀁&􀀁트리거􀀁기능􀀁개념􀀁및􀀁실습
액션􀀁기능􀀁개념􀀁및􀀁실습􀀁-􀀁애니메이션􀀁효과
액션􀀁기능􀀁개념􀀁및􀀁실습􀀁-􀀁자동􀀁애니메이션
액션􀀁기능􀀁개념􀀁및􀀁실습􀀁-􀀁오버레이
액션􀀁기능􀀁개념􀀁및􀀁실습􀀁-􀀁다음으로􀀁스크롤
액션􀀁기능􀀁개념􀀁및􀀁실습􀀁-􀀁이전􀀁아트보드
액션􀀁기능􀀁개념􀀁및􀀁실습􀀁-􀀁오디오&음성􀀁재생
프로토타이핑􀀁기본􀀁-􀀁가로􀀁세로􀀁스크롤􀀁적용하기
프로토타이핑􀀁적용􀀁-􀀁Text􀀁필드,􀀁오버레이,􀀁자동􀀁애니메이션을􀀁활용한􀀁회원가입􀀁플로우􀀁
제작
프로토타이핑􀀁적용􀀁-􀀁액션􀀁기능􀀁-􀀁자동􀀁애니메이션,􀀁오디오􀀁재생􀀁기능􀀁적용
모바일􀀁디자인􀀁제작􀀁-􀀁UI􀀁Kit을􀀁활용한􀀁와이어프레임제작
모바일􀀁디자인􀀁제작􀀁-􀀁GUI􀀁제작,􀀁디자인􀀁레이어,􀀁심볼􀀁정리
모바일􀀁디자인􀀁제작􀀁-􀀁프로토타이핑제작
모바일􀀁디자인􀀁제작􀀁-􀀁디자인􀀁검토􀀁&􀀁개발􀀁사양􀀁공유(XD,􀀁제플린)
XD를􀀁활용한􀀁콘텐츠􀀁디자인
----------------------------------------------------------------
16. Figma
- 시작하며
안녕하세요,􀀁디자이너􀀁이상효입니다
피그마란?
피그마는􀀁무료!􀀁근데􀀁유료?
링크􀀁공유􀀁방식
그래도􀀁디자이너니까􀀁피그마􀀁클라이언트􀀁설치하기

- 인터페이스􀀁이해하기
피그마􀀁첫􀀁실행,􀀁새􀀁파일􀀁만들기
좌측􀀁패널􀀁이해하기
좌상단􀀁마우스􀀁툴􀀁이해하기􀀁(1)
좌상단􀀁마우스􀀁툴􀀁이해하기􀀁(2)
좌상단􀀁마우스􀀁툴􀀁이해하기􀀁(3)
상단􀀁가운데􀀁반응형􀀁패널􀀁활용하기􀀁(1)
상단􀀁가운데􀀁반응형􀀁패널􀀁활용하기􀀁(2)
우측􀀁패널􀀁이해하기􀀁(1)􀀁share􀀁and􀀁viewing
우측􀀁패널􀀁이해하기􀀁(2)􀀁design􀀁mode
우측􀀁패널􀀁이해하기􀀁(3)􀀁prototype􀀁mode
우측􀀁패널􀀁이해하기􀀁(4)􀀁code􀀁mode
자주􀀁쓰는􀀁단축키
스크린샷􀀁찍어􀀁따라해􀀁보기

- 효율적인􀀁실무􀀁에셋􀀁관리법􀀁(1)
컴포넌트와􀀁인스턴스란?
Constraints􀀁(제약)
오토􀀁레이아웃?

- 빠르게􀀁프로젝트􀀁만들어􀀁보기
피그마로􀀁기획􀀁브레인스토밍􀀁해보기
필요한􀀁컴포넌트􀀁잘􀀁검색해서􀀁쏙􀀁빼오기
매테리얼􀀁디자인􀀁아이콘􀀁빠르게􀀁검색하고􀀁적용하기
와이어프레임과􀀁UX􀀁Flow􀀁구축하기
Arrow􀀁Auto와􀀁Auto􀀁Layout􀀁을􀀁활용해􀀁플로우􀀁차트􀀁만들기
초간단􀀁프로토타이핑􀀁해보기

- 효율적인􀀁실무􀀁에셋􀀁관리법􀀁(2)
로컬􀀁스타일􀀁응용,􀀁셀렉션􀀁컬러
스타일􀀁고도화하기􀀁-􀀁폰트,􀀁그림자,􀀁그리드􀀁등
Similayer􀀁Plugin􀀁이해하고􀀁활용하기
쏙􀀁빼오는􀀁것들의􀀁한계,􀀁컴포넌트􀀁구조의􀀁이해와􀀁적용
컴포넌트􀀁수정􀀁및􀀁통합하기􀀁(1)
컴포넌트􀀁수정􀀁및􀀁통합하기􀀁(2)
피그마에􀀁추가􀀁기능􀀁정의하고􀀁커뮤니케이션􀀁최적화􀀁하기
프로토타이핑􀀁고도화하기
룩앤필􀀁초안􀀁완성

- 피그마􀀁시너지􀀁꿀팁
피그마􀀁플러그인이란?
피그마와􀀁스크린샷􀀁기능􀀁조합하기
fonts.google.com􀀁활용하기
Google􀀁Sheet􀀁Sync􀀁플러그인􀀁이해하기
유지보수와􀀁협업을􀀁위한􀀁네이밍으로􀀁일괄􀀁수정하기

- 기초적인􀀁디자인􀀁시스템􀀁구축
시스템􀀁구축의􀀁배경,􀀁목적,􀀁원칙􀀁등을􀀁명확히􀀁하기
이미􀀁있는􀀁실무􀀁에셋을􀀁잘􀀁묶고􀀁정리하기
스타일􀀁라이브러리로􀀁맛보기􀀁시스템􀀁만들기
페이지􀀁세분화,􀀁프레임으로􀀁에셋􀀁계층􀀁나누기
네이밍으로􀀁하이어라키􀀁만들기
versioning,􀀁publishing􀀁규칙􀀁정하기
서비스􀀁소개􀀁-􀀁zeroheight.com

- 협업􀀁잘􀀁하기
공감에􀀁기반한􀀁문제􀀁정의􀀁능력
공유􀀁&􀀁문서화의􀀁중요성
작업􀀁우선순위􀀁잘􀀁정하기
Data-Driven􀀁and􀀁Business-Driven
피드백을􀀁대하는􀀁자세
서비스􀀁구축􀀁이후의􀀁로드맵􀀁그려보기

- 마무리하며
툴은􀀁툴일􀀁뿐입니다
회사는􀀁돈􀀁버는􀀁곳입니다
피그마는􀀁디자이너의􀀁좋은􀀁파트너입니다
----------------------------------------------------------------
17. ProtoPie
ProtoPie란
ProtoPie의􀀁기본􀀁개념
Protopie의􀀁인터페이스􀀁살펴보기
오브젝트의􀀁종류와􀀁간단한􀀁인터랙션
컨테이너와􀀁스크롤영역만들기
Touch􀀁트리거
Conditional􀀁트리거
Mouse􀀁Key􀀁Focus
Sensor
버튼과􀀁팝업창
크기가􀀁변하􀀁는슬라이더
Pull􀀁트리거를􀀁이용한􀀁메뉴
탭으로􀀁구성된􀀁화면과􀀁Scene
줌메뉴와􀀁페이징
카드플립과􀀁체크버튼
따라다니는􀀁도형
함수와􀀁변수의활용
Send와􀀁Receive를􀀁이용한􀀁간단한􀀁통신
Receive􀀁통신
화면􀀁세팅과􀀁메인메뉴
화면별􀀁인터랙션􀀁구현
추가􀀁구성􀀁요소􀀁및􀀁마무리
----------------------------------------------------------------
18. 디자이너를 위한 코딩
- 코딩􀀁알아보기
강사􀀁소개
디자이너에􀀁필요한􀀁개발이란
Material􀀁Design
웹과􀀁앱,􀀁개발자
HTML,􀀁CSS,􀀁JS
웹􀀁앱의􀀁동작􀀁원리

- Visual􀀁Studio􀀁Code
설치􀀁및􀀁실행
파일􀀁생성과􀀁삭제
한글화
Live􀀁Server

- 코딩􀀁무작정􀀁시작하기
프로젝트􀀁시작
CSS,􀀁JS􀀁연결
페이지의􀀁정보와􀀁구조
브라우저􀀁스타일􀀁초기화
이미지􀀁출력과􀀁스타일􀀁수정
페이지􀀁구분

- 코딩􀀁이해하기
웹􀀁표준과􀀁브라우저
특수􀀁문자􀀁용어􀀁정리
표기법
Zero-based􀀁Numbering
오픈소스􀀁라이선스

- 코딩􀀁빠르게􀀁시작하기
Codepen.io􀀁소개
Emmet

- HTML
기본􀀁문법
요소의􀀁관계􀀁이해
글자와􀀁상자
주요􀀁요소􀀁(1)
주요􀀁요소􀀁(2)
주석과􀀁전역􀀁속성

- CSS
기본􀀁문법
기본,􀀁복합􀀁선택자
가상􀀁클래스􀀁선택자
가상􀀁요소􀀁선택자
속성􀀁개요
박스모델
글꼴,􀀁문자
배경
배치
플렉스(정렬)
전환,􀀁변환
그리드
필터

- 코딩􀀁개념􀀁더하기
웹􀀁이미지􀀁종류
이미지􀀁용량􀀁관리
IMG와􀀁Background􀀁차이
BEM
Google􀀁Fonts
Favicon
반응형􀀁웹
웹􀀁개발􀀁기술􀀁검색

- 코딩􀀁예제􀀁분석하기
예제􀀁소개􀀁및􀀁개발자􀀁도구로􀀁분석
프로젝트􀀁클론
================================================================================================================================
한 번에 끝내는 프론트 엔드 개발 초격차 패키지
----------------------------------------------------------------
01. HTML/CSS/JS로 만드는 스타벅스 웹사이트
Ch 01. 개요							
01. 첫 인사 및 강의 개요							
02. HTML,CSS 그리고 JS							
03. 웹앱의 동작원리							
04. 웹 표준과 브라우저							
05. 웹에서 사용하는 이미지							
06. 특수 기호							
07. 오픈소스 라이선스	

Ch 02. VS Code							
01. 설치 및 실행							
02. 파일 생성과 삭제							
03. 한글화							
04. 정리된 코드 만들기(Beautify)							
05. 태그 이름을 한 번에 변경(Auto Rename Tag)							
06. 브라우저에 출력(Live Server)							
07. 단축키 & 공백2로 만들기

Ch 03. 무작정 시작하기							
01. Doctype(DTD)							
02. HTML, HEAD, BODY							
03. CSS,JS 연결하기							
04. 정보를 의미하는 태그 살펴보기							
05. 화면에 이미지 출력하기							
06. 상태 경로와 절대 경로							
07. 페이지를 나누고 연결(링크)하기							
08. 모든 파일 공백 크기 설정							
09. 개발자 도구 사용하기	

Ch 04. 웹에서 시작하기							
01. Codepen.io 소개							
02. 브라우저 스타일 초기화							
03. Emmet			

Ch 05. HTML 개요							
01. 기본 문법							
02. 부모와 자식 관계의 이해							
03. 빈 태그							
04. 글자와 상자	

Ch 06. HTML 핵심 정리							
01. 핵심 요소 정리							
02. 핵심 요소 출력 연습							
03. 주석							
04. 전역 속성	

Ch 07. CSS 개요							
01. 기본 문법, 주석							
02. 선언 방식							
03. 선택자_기본							
04. 선택자_복합							
05. 선택자_가상 클래스 (1)							
06. 선택자_가상 클래스 (2)							
07. 선택자_가장 요소							
08. 선택자_속성							
09. 스타일 상속							
10. 선택자 우선순위							

Ch 08. CSS 속성							
01. 개요							
02. 너비(width, height)							
03. CSS 단위							
04. 외부 여백(margin)							
05. 내부 여백(padding)							
06. 테두리 선(border)과 색상 표현							
07. 모서리 둥글게(border-radius)							
08. 크기 계산(box-sizing)							
09. 넘침 제어(overflow)							
10. 출력 특성(display)							
11. 투명도							
12. 글꼴							
13. 문자							
14. 배경							
15. 배치 (1)							
16. 배치 (2)							
17. 배치 (3)							
18. 플렉스(정렬) Container (1)							
19. 플렉스(정렬) Container (2)							
20. 플렉스(정렬) Items							
21. 전환							
22. 변환 (1)							
23. 변환 (2)							
24. Overwatch 캐릭터 선택 예제 (1)							
25. Overwatch 캐릭터 선택 예제 (2)

Ch 09. JS 선행							
01. 개요							
02. 데이터 종류							
03. 변수, 예약어							
04. 함수							
05. 조건문							
06. DOM API (1)							
07. DOM API (2)							
08. 메소드 체이닝							
09. 질의응답							

Ch 10. 스타벅스 예제							
01. 시작하기 - 프로젝트 시작, 스타일 초기화, 파비콘							
02. 시작하기 - 오픈그래프와 트위터 카드							
03. 시작하기 - Google Fonts							
04. 시작하기 - Google Material Icons							
05. 헤더와 드롭다운 메뉴 - 로고							
06. 헤더와 드롭다운 메뉴 - 서브 메뉴							
07. 헤더와 드롭다운 메뉴 - 검색							
08. 헤더와 드롭다운 메뉴 - 메인 메뉴 (1)							
09. 헤더와 드롭다운 메뉴 - 메인 메뉴 (2)							
10. 헤더와 드롭다운 메뉴 - BEM							
11. 헤더와 드롭다운 메뉴 - 전역 배지(GSAP) (1)							
12. 헤더와 드롭다운 메뉴 - 전역 배지(GSAP) (2)							
13. 순차적 애니메이션 - 전역 버튼 스타일 (1)							
14. 순차적 애니메이션 - 전역 버튼 스타일 (2)							
15. 순차적 애니메이션 - 순차적으로 요소 보이기							
16. 요소 슬라이드 - 공지사항							
17. 요소 슬라이드 - 수직 슬라이드(Swiper)							
18. 요소 슬라이드 - 요소 가운데 배치							
19. 요소 슬라이드 - 프로모션 이미지 슬라이드 (1)							
20. 요소 슬라이드 - 프로모션 이미지 슬라이드 (2)							
21. 요소 슬라이드 - 슬라이드 영역 토글							
22. 유튜브 영상 배경 - 리워즈							
23. 유튜브 영상 배경 - Youtube iframe API (1)							
24. 유튜브 영상 배경 - Youtube iframe API (2)							
25. 유튜브 영상 배경 - 반복 애니메이션							
26. 고정 이미지 배경							
27. 3D 애니메이션							
28. 스크롤 위치 계산 애니메이션 (1)							
29. 스크롤 위치 계산 애니메이션 (2)							
30. 다중 요소 슬라이드							
31. 푸터							
32. 페이지 상단으로 이동(ScrollTo)		
----------------------------------------------------------------
02. Git을 활용한 버전관리
Ch 01. 버전관리							
01. 개요(Git, GitHub)							
02. 스타벅스 예제 GitHub 업로드(Push)							
03. 버전 생성과 업로드의 이해							
04. Netlify 지속적인 배포							
05. 수정사항 버전 생성(Commit)							
06. 로그인 브랜치(Branch)							
07. 로그인 페이지 개발(1)							
08. 로그인 페이지 개발(2)							
09. 로그인 브랜치 병합(Pull Request)							
10. 프로젝트 복제(Clone)							
11. 연습-버전 되돌리기(Reset)							
12. 연습-다른 환경에서 시작하기							
13. 연습-충돌(Conflict), 로컬 병합(Merge)			
				
Ch 02. Markdown							
01. 개요							
02. 제목, 문장, 줄바꿈							
03. 강조, 목록							
04. 링크, 이미지							
05. 인용문, 코드 강조							
06. 표							
07. 원시 HTML, 수평선							
08. 원격 저장소에 Push							
----------------------------------------------------------------
03. JavaScript Essentials
Ch 01. Node.js							
01. 개요 및 설치							
02. NVM 사용법							
03. NPM 개요(1)							
04. NPM 개요(2)							
05. 개발 서버 실행과 빌드							
06. 유의적 버전(SemVer)							
07. NPM 프로젝트의 버전 관리(.gitignore)							

Ch 02. JS 시작하기							
01. 개요(ECMAScript) 및 프로젝트 초기화							
02. 데이터 타입 확인							
03. 산술, 할당 연산자							
04. 비교, 논리 연산자							
05. 삼항 연산자							
06. 조건문 If Else							
07. 조건문 Switch							
08. 반복문 For							
09. 변수 유효범위							
10. 형 변환							

Ch 03. JS 함수							
01. 함수 복습							
02. 화살표 함수							
03. IIFE							
04. 호이스팅							
05. 타이머 함수							
06. 콜백							

Ch 04. JS 클래스							
01. 생성자 함수(prototype)							
02. this							
03. ES6 Classes							
04. 상속(확장)			
----------------------------------------------------------------
04. JavaScript Level up		
Ch 01. JS 데이터							
01. 문자							
02. 숫자와 수학							
03. 배열(1)							
04. 배열(2)							
05. 객체							
06. 구조 분해 할당							
07. 전개 연산자							
08. 불변성							
09. 얕은 복사와 깊은 복사							
Ch 02. JS 데이터 실습							
01. 가져오기, 내보내기							
02. Lodash 사용법							
03. JSON							
04. Storage							
05. OMDb API							
Ch 03. 정규표현식							
01. 개요 및 프로젝트 시작							
02. 정규식 생성							
03. 메소드							
04. 플래그(옵션)							
05. 패턴(표현) (1)							
06. 패턴(표현) (2)							
----------------------------------------------------------------
05. TypeScript Essentials
Ch 01. TypeScirpt							
01. TypeScript 란 무엇인가							
02. TypeScript 설치 및 사용							
03. VS Code 설치 및 설정							
04. First Type Annotation							
Ch 02. Basic Types							
01. TypeScript Types vs JavaScript Types							
02. Primitive Types							
03. boolean							
04. number							
05. string							
06. symbol							
07. null & undefined							
08. object							
09. Array							
10. Tuple							
11. any							
12. unknown							
13. never							
14. void							
Ch 03. Type System							
01. 작성자와 사용자의 관점으로 코드 바라보기							
02. Structural Type System vs Nominal Type System							
03. 타입 호환성 (Type Compatibility)							
04. 타입 별칭 (Type Alias)							
Ch 04. TypeScript Compiler							
01. Compilation Context							
02. tsconfig schema							
03. compileOnSave							
04. extends							
05. files, include, exclude							
06. compileOptions - typeRoots, types							
07. compileOptions - target 과 lib							
08. compileOptions - outDir, outFile, rootDir							
09. compileOptions - strict							
Ch 05. Interfaces							
01. What are Interfaces							
02. optional property (1)							
03. optional property (2)							
04. function in interface							
05. class implements interface							
06. interface extends interface							
07. function interface							
08. Readonly Interface Properties							
09. type alias vs interface							
Ch 06. Classes							
01. What are Classes							
02. Quick Start - class							
03. constructor & initialize							
04. 접근 제어자 (Access Modifiers)							
05. initialization in constructor parameters							
06. Getters & Setters							
07. readonly properties							
08. Index Signatures in class							
09. Static Properties & Methods							
10. Singletons							
11. 상속(Inheritance)							
12. Abstract Classes							
Ch 07. Generics							
01. Generics, Any 와 다른 점							
02. Generics Basic							
03. Generics Array & Tuple							
04. Generics Function							
05. Generics Class							
06. Generics with extends							
07. keyof & type lookup system							
----------------------------------------------------------------
06. SCSS
Ch 01. SCSS							
01. 개요							
02. 프로젝트 생성							
03. 주석							
04. 중첩 with SassMeister							
05. 상위(부모) 선택자 참조							
06. 중첩된 속성							
07. 변수							
08. 산술 연산							
09. 재활용(Mixins)							
10. 반복문							
11. 함수							
12. 색상 내장 함수							
13. 가져오기							
14. Overwatch 캐릭터 선택 예제 리팩토링							
15. 데이터 종류							
16. 반복문 @each							
17. 재활용 @content							
----------------------------------------------------------------
07. CSS 프레임워크 BootStrap
Ch 01, CSS 프레임워크 BootStrap							
01. 개요							
02. CDN 프로젝트 생성							
03. 버튼과 버튼 그룹							
04. 드롭다운과 리스트							
05. 양식							
06. 모달							
07. 툴팁							
08. NPM 프로젝트 생성							
09. 테마 색상 커스터마이징							
10. 성능 최적화(트리 쉐이킹)							
----------------------------------------------------------------
08. Bundler
Ch 01. Parcel							
01. 번들러 개요							
02. 프로젝트 생성							
03. 정적 파일 연결							
04. autoprefixer							
05. babel							
06. CLI							
07. 저장소 업로드							
Ch 02. Webpack							
01. 프로젝트 생성							
02. entry, output							
03. plugins							
04. 정적 파일 연결							
05. module							
06. SCSS							
07. Autoprefixer(PostCSS)							
08. babel							
09. Netlify 배포							
10. NPX, Degit							
----------------------------------------------------------------
09. Vue.js
Ch 01. Vue 시작하기							
01. 개요							
02. CDN, Codepen							
03. Vue CLI, Vetur							
04. Vue3 Webpack Template							
05. Vue3 Webpack Template - ESLint 구성							
06. 선언적 렌더링과 입력 핸들링							
07. 조건문과 반복문							
CH 02. Vue 문법							
01. 인스턴스와 라이프사이클							
02. 템플릿 문법							
03. Computed							
04. Computed 캐싱							
05. Getter, Setter							
06. Watch							
07. 클래스와 스타일 바인딩							
08. 조건부 렌더링							
09. 리스트 렌더링							
10. 이벤트 핸들링							
11. 이벤트 핸들링 - 이벤트 수식어							
12. 이벤트 핸들링 - 키 수식어							
13. 폼 입력 바인딩							
14. v-model 수식어							
15. 컴포넌트 - 기초							
16. 컴포넌트 - 속성 상속							
17. 컴포넌트 - Emit							
18. 컴포넌트 - Slot							
19. 컴포넌트 - Provide, Inject							
20. 컴포넌트 - Refs							
Ch 03. 컴포지션API							
01. 개요							
02. 반응형 데이터(반응성)							
03. 기본 옵션과 라이프사이클							
04. props, context							
Ch 04. 영화 검색 사이트 예제							
01. 소개							
02. Vue Router 구성							
03. Bootstrap 구성							
04. Header - Nav							
05. Header - Logo 및 Google Fonts							
06. Headline							
07. Search - 필터							
08. Search - 버튼							
09. Vuex(Store) 개요							
10. Vuex(Store) 구성							
11. 영화 검색							
12. 영화 검색 추가 요청							
13. 영화 목록에서 ID 중복 제거							
14. 비동기 - 콜백과 프로미스 객체의 이해							
15. 비동기 - 예외 처리(then, catch, finally)							
16. 비동기 - API 비동기 처리 연습							
17. 영화 검색 코드 리팩토링							
18. 영화 아이템 - 기본 출력							
19. 영화 아이템 - 텍스트 말줄임 표시와 배경 흐림 처리							
20. Container 너비 사용자 지정							
21. 에러 메시지 출력과 로딩 애니메이션							
22. Footer							
23. 단일 영화 상세 정보 가져오기							
24. 스켈레톤 UI							
25. Loader							
26. 영화 상세 페이지 정리							
27. Ratings 데이터 출력							
28. 더 높은 해상도의 영화 포스터 가져오기							
29. Vue 플러그인(이미지 로드 이벤트)							
30. 영화 포스터가 없는 경우 예외 처리							
31. Nav 경로 일치 및 활성화							
32. About							
33. 404 Page Not Found							
34. 부트스트랩 Breakpoint(반응형)							
35. 모든 컴포넌트에서 전역 스타일 가져오기							
36. Vuex Helpers							
37. Vuex 핵심 정리							
38. 검색 정보 초기화 및 페이지 전환 스크롤 위치 복구							
39. Vue Router 정리							
40. Netlify 배포(CD)							
41. SPA 개요							
42. Netlify Serverless Functions							
43. Netlify-CLI 구성							
44. 영화 정보 반환 API 만들기							
45. 로컬 및 서버의 환경 변수 구성							
46. 포트 수정 및 배포							
Ch 05. 단위 테스트							
01. 테스트 개요							
02. 테스트 환경 구성							
03. 첫 테스트							
04. Jest Globals							
05. Jest Matchers 이해							
06. 비동기 테스트							
07. 모의(Mock) 함수							
08. VTU 첫 테스트							
09. VTU API							
10. mount vs shallowMount							
11. Header 컴포넌트							
12. Search 컴포넌트							
13. Movie 컴포넌트							
14. movie 스토어 1부							
15. movie 스토어 2부							
Ch 06. E2E 테스트							
01. Cypress 설치 및 환경 구성							
02. 첫 테스트							
03. 영화 검색 시나리오 테스트							
04. Cypress API							
05. About 페이지 이동 시나리오 테스트							
06. Headless 테스트 및 테스트 동영상 생성							
07. 단위 테스트 충돌 방지 및 배포							
Ch 07. Nuxt							
01. CSR vs SSR							
02. SEO							
03. Open Graph							
04. Nuxt와 Heroku 소개							
05. Nuxt 프로젝트 생성 및 기존 프로젝트(Vue2) 가져오기							
06. 프로젝트 이전(Migration) 1부							
07. 프로젝트 이전(Migration) 2부							
08. Server Middleware로 백엔드 API 만들기 1부							
09. Server Middleware로 백엔드 API 만들기 2부							
10. 동적으로 Meta 정보 생성하기							
11. Heroku 배포 및 테스트							
----------------------------------------------------------------
10. React로 쇼핑몰 만들기 (React 기본)
Ch 01. React Getting Started							
01. React Concept							
02. 개발 환경 체크							
03. React 라이브러리 (1)							
04. React 라이브러리 (2)							
Ch 02. React Component							
01. React Component 만드는 법							
02. React.createElement 로 컴포넌트 만들기							
03. JSX							
04. Props 와 State							
05. Event Handling							
06. Component Lifecycle (1)							
07. Component Lifecycle (2)							
Ch 03. Creating React Project							
01. Create React App							
02. ESLint							
03. Prettier							
04. husky							
05. lint-staged							
06. Create React App 시작 코드 이해하기							
07. 리액트 컴포넌트 디버깅							
Ch 04. React Router							
01. React 의 라우팅 이해하기							
02. Dynamic 라우팅 (1)							
03. Dynamic 라우팅 (2)							
04. Switch 와 NotFound							
05. JSX 링크로 라우팅 이동하기 (1)							
06. JSX 링크로 라우팅 이동하기 (2)							
07. JS 로 라우팅 이동하기							
08. Redirect							
Ch 05. React Component Styling							
01. Style Loaders							
02. CSS, SASS							
03. CSS module, SASS module							
04. Styled Components (1)							
05. Styled Components (2)							
06. React Shadow							
07. Ant Design							
Ch 06. 리액트 실전 활용							
01.High Order Component							
02.Controlled Component 와 Uncontrolled Component							
Ch 07. Hooks & Context							
01.Basic Hooks (1)							
02.Basic Hooks (2)							
03.Custom Hooks							
04.Additional Hooks							
05.React Router Hooks							
06.컴포넌트 간 통신							
07.Context API							
Ch 08. React Testing							
01.JavaScript Unit Test & Jest 사용하기							
02.React Component Test							
03.testing-libraryreact 활용하기							
Ch 09. React Advanced							
01. Optimizing Performance							
02. createPortal							
03. forwardRef							
Ch 10. Deploy React App							
01. SPA 프로젝트 배포 이해하기							
02. serve 패키지로 React Wep App 배포하기							
03. AWS S3 에 React Wep App 배포하기							
04. NginX 로 React Wep App 배포하기							
05. node.js express 로 React Wep App 배포하기							
06. 서버사이드 렌더링 이해하기							
Ch 11. React 로 만드는 쇼핑몰 프로젝트							
01. 프로젝트 개요							
02. 기본 디자인 설정하기							
03. 상품 리스트 보여주기							
04. 상품 선택과 삭제를 주문에서 보여주기	
----------------------------------------------------------------						
11. Redux로 상태관리하기
Ch 01. Redux Basic							
01.Redux 개요							
02.Action - 액션							
03.Reducers - 리듀서							
04.createStore							
05.combineReducers							
06.Redux 를 React 에 연결 (1)							
07.Redux 를 React 에 연결 (2)							
Ch 02. Redux Advanced (1)							
01.Async Action with Redux							
02.리덕스 미들웨어							
03.redux-devtools							
04.redux-thunk							
05.redux-promise-middleware							
Ch 03. Redux Advanced (2)							
01.Ducks Pattern							
02.react-router-dom 과 redux 함께 쓰기							
03.redux-saga							
04.redux-actions							
----------------------------------------------------------------
12. React로 나의 책장 만들기 (TypeScript)
01.프로젝트 개요							
02.라우팅 설정하기							
03.로그인, 로그아웃							
04.책 목록 보여주기							
05.책 추가하기							
06.책 삭제하기							
----------------------------------------------------------------
13. mobX로 상태관리하기
01.What is MobX							
02.프로젝트에 Decorator 설정하기							
03.@observable (by mobx)							
04.@observer (by mobx-react)							
05.@computed (by mobx)							
06.@action (by mobx)							
07.@inject 와 Provider							
08.mobx-devtools							
09.stores							
10.Asynchronous actions							
----------------------------------------------------------------
14. GraphQL 맛보기 (Server 만들기)
01. Rest API 와 GraphQL							
02. Apollo 를 이용해서 Node.js 서버 만들기							
03. typeDef 와 resolver							
04. 여러개의 데이터 조회하기							
05. 특정 데이터 조회하기							
06. 데이터 추가하기							
07. 데이터 변경, 삭제하기							
----------------------------------------------------------------
15. Next.js로 블로그 만들기
Ch 01. Sanity로 Blog 모델 만들기							
01. What is Sanity							
02. Sanity Project 만들고 Deploy 하기							
03. Schema 만들기 (1) - author							
04. Schema 만들기 (2) - post							
05. Schema 만들기 (3) - home							
06. Schema 만들기 (4) - blockContent							
07. Studio 의 input 창 커스터마이징							
08. query 사용하기							
Ch 02. Next.js로 Blog 모델 만들기							
01. What is Next.js							
02. Next.js 프로젝트 만들기							
03. 라우팅 설정하기							
04. Sanity 연결하고 데이터 가져오기							
05. 스타일 작업 (1) - Blog Home							
06. 스타일 작업 (2) - Post							
07. next.config.js							
08. Next.js 배포 이해하기							
----------------------------------------------------------------
Part 16. Svelte
Ch 01. Svelte 입문							
01. 개요							
02. REPL							
03. 선언적 렌더링							
04. 조건문과 반목문							
05. 이벤트 핸들링							
06. 컴포넌트							
07. 스토어							
Ch 02. Svelte 프로젝트 (Snowpack)							
01. Snowpack 개요							
02. Snowpack & Svelte 템플릿 구성							
03. 빌드 최적화 및 Babel, SCSS 추가 구성							
04. Svelte for VSCode에서 컴파일 경고 무시							
05. Simple Todo App 개요 및 기본 구성							
06. CreateTodo							
07. Todo							
08. Storage API							
09. 사이트 배포							
================================================================================================================================
한 번에 끝내는 Java/Spring 웹 개발 마스터 초격차 패키지
----------------------------------------------------------------
01.자바 프로그래밍
Ch 01. 자바 기초							
01. 자바 프로그래밍 시작하기							
02. 자바와 이클립스 설치하기							
03. 첫 자바 프로그램 만들고 실행하기							
04. 컴퓨터에서 자료 표현하기							
05. 변수는 변하는 수입니다							
06. 정수는 프로그램에서 어떻게 표현하여 사용하나요?							
07. 자료형(data type)- 실수는 어떻게 표현하여 사용하나요?							
08. 자료형(data type)- 자료형(data type)- 문자는 프로그램에서 어떻게 표현하여 사용하나요?
09. 자료형(data type)- 논리형과 자료형 없이 변수 사용하기							
10. 변하지 않는 상수와 리터럴, 변수의 형 변환							
11. 자바의 연산자들 -1 (대입, 부호, 산술, 복합대입, 증감연산자)							
12. 자바의 연산자들 -2 (관계, 논리 연산자)							
13. 자바의 연산자들 -3 (조건 연산자, 비트 연산자)							
14. 조건문 - if 문(만약에... 라면)							
15. 조건이 여러 개 일 때의 if 문							
16. 조건이 여러 개 일 때 간단히 표현되는 switch-case 문							
17. 반복문 - while문							
18. 반복문 - do-while문							
19. 반복문 - for문							
20. 반복문이 여러 번 포개진 중첩 반복문							
21. 중간에 멈추는 break문, 무시하고 계속 진행하는 continue문							
----------------------------------------------------------------
02. 객체지향 프로그래밍
Ch 02. 객체 지향 입문							
01. 객체와 객체지향 프로그래밍							
02. 생활 속에서 객체 찾아 클래스로 구현해보기							
03. 함수와 메서드							
04. 객체의 속성은 멤버 변수로, 객체의 기능은 메서드로 구현한다							
05. 인스턴스 생성과 힙 메모리							
06. 생성자에 대해 알아봅시다 (constructor)							
07. 여러가지 생성자를 정의하는 생성자 오버로딩 (overloading)							
08. 복습해봅시다 (객체 구현하기)							
09. 참조 자료형 변수							
10. 접근 제어 지시자(access modifier)와 정보은닉(infomation hiding							
11. 캡슐화 (encapsulation)							
12. 객체 자신을 가리키는 this							
13. 객체 간의 협력 (collaboration)							
14. 버스 타고 학교 가는 학생의 과정을 객체 지향 프로그래밍으로 구현해보기							
15. 복습해봅시다  (객체 협력)							
16. 여러 인스턴스에서 공통으로 사용하는 변수를 선언하자 - static 변수							
17. static 메서드의 구현과 활용, 변수의 유효 범위							
18. static 응용 - 싱글톤 패턴 (singleton pattern)							
19. 복습해봅시다 (static과 싱클톤 패턴)							
20. 자료를 순차적으로 한꺼번에 관리하는 방법 - 배열(array)							
21. 객체 배열 사용하기							
22. 2차원 배열 사용하기							
23. 객체 배열을 구현한 클래스 ArrayList							
24. ArrayList를 활용한 간단한 성적 산출 프로그램							
Ch 03. 객체 지향 핵심							
01. 객체 간의 상속은 어떤 의미일까							
02. 상속을 활용한 멤버십 클래스 구현하기							
03. 상속에서 클래스 생성 과정과 형 변환							
04. 메서드 재정의 하기(overriding)							
05. 메서드 재정의와 가상 메서드 원리							
06. 다형성과 다형성을 사용하는 이유							
07. 상속은 언제 사용 할까							
08. 다운 캐스팅과 instanceof							
09. 추상 클래스의 의미와 구현하는 방법							
10. 추상 클래스를 활용한 템플릿 메서드 패턴							
11. 구현 코드가 없는 인터페이스							
12. 인터페이스는 왜 사용하는가							
13. 프로그램에서 인터페이스의 역할과 다형성							
14. 인터페이스의 여러가지 요소							
15. 여러 인터페이스 구현하기, 인터페이스의 상속							
16. 복습해보세요							
Ch 04. 자바의 유용한 클래스들							
01. Object 클래스 - 모든 클래스의 최상위 클래스							
02. Object 클래스의 메서드 활용							
03. String, StringBuilder, StringBuffer 클래스, text block							
04. Class 클래스 사용하기							
Ch 05. 자바와 자료구조							
01. 여러가지 자료구조에 대해 알아봅시다							
02. 여러가지 자료구조에 대한 설명							
03. 배열(Array) 구현하기							
04. 연결리스트(LinkedList) 구현하기							
05. Stack 구현하기							
06. Queue 구현하기							
07. 무엇이든 담을 수 있는 제네릭(Generic) 프로그래밍							
08. T extends 클래스 사용하기							
09. 제네릭 메서드 활용하기							
10. 자바에서 제공되는 자료구조 구현 클래스들 - 컬레션 프레임워크							
11. 순차적으로 자료를 관리하는 Lst 인터페이스를 구현한 클래스와 그 활용							
12. Collection 요소를 순회하는 Iterator							
13. 중복되지 않게 자료를 관리하는 Set 인터페이스를 구현한 클래스와 그 활용							
14. 정렬을 위해 Comparable과 Comparator 인터페이스 구현하기							
15. 쌍(pair)으로 자료를 관리하는 Map 인터페이스를 구현한 클래스와 그 활용							
Ch 06. 자바의 다양한 기능들							
01. 여러 내부클래스의 정의와 유형							
02. 익명 내부 클래스의 활용							
03. 함수형 프로그래밍과 람다식 문법							
04. 함수형 인터페이스와 람다식 구현하여 사용하기							
05. 스트림(Stream)							
05. 객체지향 프로그래밍 방식과 람다식 구현 방식의 비교							
06. 연산 수행에 대한 구현을 할 수 있는 reduce() 메서드							
07. 스트림을 활용하여 패키지 여행 비용 계산하기							
08. 예외처리는 왜 해야 하나 자바에서 제공되는 클래스							
09. 예외 처리하기와 미루기(1)							
09. 예외 처리하기와 미루기(2)							
10. 사용자 정의 예외클래스와 활용							
11. 오류의 로그를 남기기 - java.util.logging.Logger 활용							
12. 자바의 입출력을 위한 I,O 스트림							
13. 표준 입출력 스트림							
14. 바이트 단위 입출력 스트림(1)							
14. 바이트 단위 입출력 스트림(2)							
15. 문자 단위 입출력 스트림							
16. 여러가지 보조 스트림 클래스들							
17. 직렬화(serialization)							
18. 그외 여러가지 입출력 클래스들							
19. 데코레이터 패턴을 활용한 커피 머신 프로그램							
20. 자바에서 Thread 만들기							
21. Thread 클래스의 여러 메서드들							
22. 멀티 Thread 프로그래밍에서의 동기화							
23. wait( ), notify( ) 메서드를 활용한 동기화 프로그래밍							
Ch 07. 프로젝트 만들기							
01. 성적 관리 프로그램(1)							
01. 성적 관리 프로그램(2)							
01. 성적 관리 프로그램(3)							
01. 성적 관리 프로그램(4)							
Ch 08. 자바를 활용한 알고리즘 문제 풀이							
01.  알고리즘 문제 - 1							
02.  알고리즘 문제 - 2							
03.  알고리즘 문제 - 3(1)							
03.  알고리즘 문제 - 3(2)							
04.  알고리즘 문제 - 4(1)							
04.  알고리즘 문제 - 4(2)							
05.  알고리즘 문제 - 5							
06.  알고리즘 문제 - 6							
07.  알고리즘 문제 - 7							
08.  알고리즘 문제 - 8							
09.  알고리즘 문제 - 9							
10.  알고리즘 문제 - 10
----------------------------------------------------------------
03. 스프링 입문
Ch 01. 객체지향							
01. 개발환경설치							
01. 인텔리제이 라이센스 가이드(번외 클립)							
02. 객체지향이란?							
03. 객체지향 4가지 핵심요소							
04. 객체지향 설계 5원칙							
05. POJO JAVA							
Ch 02. 디자인 패턴							
01. 디자인패턴이란							
02. 싱글톤 패턴							
03. 어댑터 패턴							
04. 프록시패턴							
05. 데코레이터 패턴							
06. 옵저버 패턴							
07. 파사드 패턴							
08. 전략 패턴							
Ch 03. 웹 개발 개론							
01. 웹 개발이란							
02. REST API							
03. URI 설계 패턴							
04. HTTP Protocol							
Ch 04. 스프링 부트 시작하기							
01. 스프링 부트란							
02. Hello World API를 만들어보자							
03. GET API							
03. GET API(2)							
04. POST API							
05. PUT API							
06. DELETE API							
07. Response 내려주기 및 모법사례							
08. 모범사례 - Object Mapper							
Ch 05. 스프링을 조금 더 들여다 보기							
01. 스프링의 핵심							
02. Ioc , DI(1)							
02. Ioc , DI(2)							
03. AOP							
04. AOP 실무 사례 알아보기(1)							
04. AOP 실무 사례 알아보기(1)							
05. ObjectMapper							
06. ObjectMapper 실무 사례 알아보기							
07. 여러가지 Annotation 알아보기							
Ch 06. 스프링의 기능을 활용해보자							
01. Spring Boot Validation							
02. Spring Boot Custom Validation							
03. Spring Boot Exception 처리							
04. Spring Boot Validation을 통한 모범 사례(1)							
04. Spring Boot Validation을 통한 모범 사례(2)							
05. Filter-Interceptor의 활용 (1)							
05. Filter-Interceptor의 활용 (2)							
06. 비동기 처리 하기							
Ch 07. Server to Server 간의 연결							
01. Server to Server 통신을 하는방법							
02. Rest Template 사용하기(1)							
02. Rest Template 사용하기(2)							
02. Rest Template 사용하기(3)							
03. Naver 지역 검색 API 연동해보기							
Ch 08. JUnit 으로 테스트 하기							
01. JUnit란							
02. REST API CRUD 테스트 코드 작성하기							
03. 테스트 커버리지 확인하기							
Ch 09. Swagger를 통한 API 공개							
01. Swagger란?							
02. Swagger설정하기(1)							
02. Swagger설정하기(2)							
Ch 10. 네이버 지역검색 API를 활용한 맛집 List 만들기							
01. 요구 사항 분석							
02. 프로젝트 설계							
03. Memory CRUD DB 개발하기							
04. REST API 개발하기(1)							
04. REST API 개발하기(2)							
04. REST API 개발하기(3)							
04. REST API 개발하기(4)							
05. 간단한 Front View 개발하기			
----------------------------------------------------------------				
04.안정적인 서비스를 위한 스프링 DATA와 Security ① JPA 프로그래밍
Ch 01. 학습 전 기초 사항							
01. 강사소개 학습 목표							
02. JPA 소개							
03. 스프링 부트 프로젝트 생성							
04. Lombok 알아보기							
05. H2 DB 및 로그 설정							
Ch 02. SpringData JPA 기초보기							
01. Repository Interface 계층살펴보기							
02. Repository Interface 메소드 실습 (1)							
02. Repository Interface 메소드 실습 (2)							
03. SimpleJpaRepository 코드보기							
Ch 03. QueryMethod 살펴보기							
01. 쿼리메소드의 정의 및 기본실습 1							
02. 쿼리메소드 기본실습 2(1)							
03. 쿼리메소드 기본실습 2(2)							
04. 쿼리메소드로 정렬시켜 보기							
05. 쿼리메소드로 페이징 처리하기							
Ch 04. Entity 기본속성 살펴보기							
01. Entity의 기본속성(annotation) - 1							
02. Entity의 기본속성(annotation) - 2							
Ch 05. Listener 활용하기							
01. Entity의 Listener의 활용 - 1							
02. Entity의 Listener의 활용 - 2							
Ch 06. 연관관계 살펴보기							
01. 연관관계(relation) 개요 및 ERD 알아보기							
02. 1대1 연관관계 살펴보기(1)							
02. 1대1 연관관계 살펴보기(2)							
03. 1대N 연관관계 살펴보기							
04. N대1 연관관계 살펴보기							
05. N대N 연관관계 살펴보기(1)							
05. N대N 연관관계 살펴보기(2)							
Ch 07. 영속성이란?							
01. 영속성 컨텍스트							
02. Entity 캐시							
03. 생명주기							
04. 트랜잭션 매니져 (1)							
04. 트랜잭션 매니져 (2)							
04. 트랜잭션 매니져 (3)							
04. 트랜잭션 매니져 (4)							
04. 트랜잭션 매니져 (5)							
04. 트랜잭션 매니져 (6)							
Ch. 08 영속성 전이에 대해서							
01. Cascade 알아보기							
02. 고아제거속성 알아보기							
Ch. 09 쿼스텀 쿼리 사용하기							
01. @Query 사용하기(01)							
01. @Query 사용하기(02)							
01. @Query 사용하기(03)							
02. Native 쿼리 사용하기							
03. Converter 사용하기							
Ch. 10 임베디드 타입 활용하기							
01. 필요성, Embedded, Embeddable, 속성의 재정의							
Ch. 11 JPA 트러블슈팅							
01. N 1 이슈							
02. 영속성 컨텍스트로 인해 발생하는 이슈							
03. 배치쿼리 성능 이슈							
----------------------------------------------------------------
04. 안정적인 서비스를 위한 스프링 DATA와 Security ② 스프링 시큐리티
Ch 01. 강의소개							
01. 이 강의에 대하여							
02. gradle 프로젝트 구성							
03. 스프링 시큐리티란(1)							
03. 스프링 시큐리티란(2)							
Ch 02. 스프링 시큐리티의 전체 구조							
01. 스프링시큐리티의 큰그림							
02. 로그인 하기							
03. 폼 로그인							
03-1. basiclogin 실습							
04. Authentication 매커니즘							
04-1. logincustomfilter 실습							
05. Basic 토큰인증							
05-1. Basic 인증 기본 테스트							
05-2. 웹과 모바일서비스 개발							
06. DaoAuthenticationProvider와 UserDetailsService							
07. 로그인을 지원하기 위한 필터들							
07-1. RememberMe 토큰 저장							
08. 세션관리							
09. 권한체크와 오류 처리(1)							
09. 권한체크와 오류 처리(2)							
Ch 03. 권한 프로그래밍							
01. 권한의 큰 그림(1)							
01. 권한의 큰 그림(2)							
02. Voter(1)							
02. Voter(2)							
02-1. ExpressionVoter 테스트 실습							
03. 메쏘드 후처리-1							
03. 메쏘드 후처리-2							
04.  Secured 기반 권한체크-1							
04.  Secured 기반 권한체크-2							
04.  Secured 기반 권한체크-3							
05. 임시권한 부여							
06. 도메인 객체 보안(ACL) - 1							
06. 도메인 객체 보안(ACL) - 2							
Ch 04. 권한 프로그래밍 실습							
01-1. 학교 도메인 설계및 테스트							
01-2. 선생님-학생도메인 설계							
01-3. 시험지 템플릿 도메인							
02-1. 메인화면과 로그인화면							
02-2. 학생-선생님-관리자 사이트 화면							
02-3. 사이트 상세화면 만들기							
03-1. 사이트 권한 코딩(1)							
03-1. 사이트 권한 코딩(2)							
Ch 05. JWT 토큰 다루기							
01. JWT 토큰 (1)							
01. JWT 토큰 (2)							
02. AuthToken을 이용한 로그인							
03. RefreshToken을 이용한 로그인							
04. OAuth2 로그인							
05. sns 로그인 관리	
----------------------------------------------------------------						
05. 대규모 서비스를 위한 스프링 Cloud와 Batch ① 스프링 클라우드
Ch 01. 웹서비스 확장 전략							
01. 스프링클라우드 학습 목표 및 오리엔테이션							
02. 웹서비스 확장 전략							
03. 스케일업 - 스케일아웃 = 블루그린배포							
04. 서버 부하분산을 위한 네트워크							
05. DNS 실습 및 host 설명							
06. DNS 매핑 및 웹 서버 연동							
07. Virtual IP							
08. 읽기요청 부하 분산							
09. 클러스터링과 레플리카							
10. 샤딩							
11. 쓰기 요청 분산							
12. 메시지 큐							
Ch 02. 스프링 클라우드							
01. 스프링클라우드 소개							
02. 스프링클라우드 프로젝트 세팅							
Ch 03. 웹 API 통합을 위한 기술							
01. API 통합 기술소개 (zuul, spring cloud gateway)							
02. spring cloud gateway 활용							
Ch 04. 분산시스템관리를 위한 Discovery pattern							
01. zookeeper와 eureka 소개							
02. eurkea 활용							
Ch 05. 쓰기요청 분산처리를 위한 메시지 큐 활용							
01. 분산환경에서 쓰기 요청을 분산처리 하려면							
02. RabbitMQ 와 Kafka 소개							
03. spring cloud amqp를 이용한 rabbitmq 연동							
04. spring cloud kafka를 이용한 kafka 연동							
Ch 06. 분산환경에서 API Client 개발							
01. Ribbon과 FeignClient							
02. FeignClient 를 이용한 API 연동							
03. FeignClient와 eurkea 연동							
Ch 07. 장애허용시스템 구축							
01. resilience4j 를 활용한 circuit breaker 패턴 적용(1)							
01. resilience4j 를 활용한 circuit breaker 패턴 적용(2)							
Ch 08. 구글 GCP 활용							
01. 구글 GCP 소개							
02. 구글 GCP에 예제 컴포넌트 배포							
03. 구글 GCP에 spring Cloud 관련 기능 활용(1)							
03. 구글 GCP에 spring Cloud 관련 기능 활용(2)							
Ch 09. 분산환경에서 서버설정 통합관리							
01. 스프링 클라우드 컨피그 소개							
02. 스프링클라우드에서 컨피그를 연동하여 설정 정보 업데이트 관리							
03. 스프링클라우드 볼트를 이용한 설정정보 보안							
Ch 10. 분산환경에서 모니터링							
01. 스프링클라우드 어드민을 이용한 모듈별 상태 관리							
02. 분산환경에서 로깅을 위한 MDC							
03. 스프링클라우드의 슬루스와 집킨을 이용한 모니터링
----------------------------------------------------------------
05. 대규모 서비스를 위한 스프링 Cloud와 Batch ② 스프링 배치
Ch 01. 스프링 배치란							
01. 배치와 스프링 배치 이해							
02. 환경 설정 및 준비							
03. Hello, Spring Batch							
Ch 02. 스프링 배치 아키텍쳐							
01. 스프링 배치 기본 구조							
02. 스프링 배치 테이블 구조와 이해							
03. Job, JobInstance, JobExecution, Step, StepExecution 이해							
04. 데이터 공유 ExecutionContext 이해							
Ch 03. 스프링 배치 기초 이해하기							
01. Task 기반 배치와 Chunk 기반 배치							
02. JobParameters 이해							
03. @JobScope와 @StepScope 이해							
04. ItemReader interface 구조							
05. CSV 파일 데이터 읽기							
06. JDBC 데이터 읽기							
07. JPA 데이터 읽기							
08. ItemWriter interface 구조 이해							
09. CSV 파일 데이터 쓰기							
10. JDBC 데이터 쓰기							
11. JPA 데이터 쓰기							
12. ItemProcessor interface 구조 이해, 과제 요구사항 설명							
13. [과제] CSV 파일 데이터 읽고 MySQL DB에 insert 하기							
14. 테스트 코드 작성하기							
15. JobExecutionListener, StepExecutionListener 이해							
16. StepListener 이해							
17. skip 예외처리							
18. retry 예외처리							
Ch 04. 회원 등급 프로젝트							
01. 요구사항 이해하기							
02. 회원 데이터 H2 DB에 저장하기							
03. 회원 주문 금액에 따른 등급 적용 Step 개발							
04. JobExecutionListener로 대상 회원 데이터 로그와 실행 시간 측정							
Ch 05. 주문금액 집계 프로젝트							
01. 요구사항 이해							
02. User와 Orders Entity의 매핑 관계 개발							
03. 일별 주문 금액 집계 Step 개발							
04. JobExecutionDecider로 주문 금액 집계 Step 실행 여부 결정							
Ch 06. 성능 개선과 성능 비교							
01. 성능 개선 계획 이해							
02. Async Step 적용하기							
03. Multi-Thread Step 적용하기							
04. Partition Step 적용하기							
05. Parallel Step 적용하기							
Ch 07. 스프링 배치 설정과 실행							
01. jar 생성과 실행							
02. jenkins scheduler를 이용한 스프링 배치 실행							
----------------------------------------------------------------
06.[무료 제공] IntelliJ 가이드
Ch 01. 인텔리제이 시작하기							
01. 인텔리제이 설치하기							
Ch 02. 인텔리제이 단축키							
01. 단축키 기본 I							
02. 단축키 기본 II							
03. 단축키 응용							
Ch 03. 인텔리제이 실습 - To do List 구현하기							
01. 요구사항 정리							
02. 환경설정 및 프로젝트 세팅(spring boot)							
03. 모델 구현							
04. repository 구현							
05. 서비스 코드 구현							
06. 컨트롤러 구현							
07. 테스트 코드 작성							
Ch 04. 리팩토링							
01. TodoList 리팩토링하기							
Ch 05. 디버깅							
01. 디버깅 이해							
02. 디버깅 실습							
================================================================================================================================
한번에 끝내는 PPT 제작/디자인 초격차 패키지
----------------------------------------------------------------
01. 디자인 기본기
디자인TIP 컬러 잘쓰는 법						
디자인TIP 이미지 검색법과 사이트 추천						
디자인TIP 배치						
디자인TIP 타이포그래피						
----------------------------------------------------------------
02. PPT 기본기
Ch 01. 인트로						
이지쌤을 소개합니다						
파워포인트로 만들 수 있는 것들						
커리큘럼 소개 및 활용방법						
Ch 02. 기본부터 다지는 PPT 기초 스킬						
파워포인트를 업그레이드 하라						
아주 간단한 기본 설정 스킬						
업무속도를 높여줄 기본 환경 세팅						
실무에 꼭 필요한 단축키 활용법						
Ch 03. 이것만 알면 200% 활용가능! PPT 꿀 팁						
포토샵 없이 PPT로 끝내기 - 이미지 편집						
포토샵 없이 PPT로 끝내기 - 이미지 효과						
일러스트 없이 PPT로 끝내기 - 도형 편집						
일러스트 없이 PPT로 끝내기 - 도형 효과						
센스있는 PPT 자료 만들기 -  색상조합						
센스있는 PPT 자료 만들기 -  글꼴 활용						
센스있는 PPT 자료 만들기 -  스마트아트
----------------------------------------------------------------
03. 실전 PPT
역동적인 PPT 만들기 - 애니메이션						
역동적인 PPT 만들기 - 전환효과						
발표를 극적으로 만들어주는 모핑효과 1편						
발표를 극적으로 만들어주는 모핑효과 2편						
디자이너처럼 PPT 만드는 법 - 아이콘 활용						
전문가처럼 발표 PPT 만들기 - 슬라이드쇼, 펜						
전문가처럼 발표 PPT 만들기 - 슬라이드쇼 녹화 및 연습						
----------------------------------------------------------------
04. PPT 제작 실습
Ch 01. 직접 만들어보자! 회사 소개서						
회사 소개서에 들어가는 것들						
표지						
브랜드 스토리						
회사소개						
경영철학:비전						
주요 연혁						
매출 및 임직원						
공장 및 거래처 현황						
Ch 02. 직접 소개해보자! 상품소개서 PPT						
상품소개 PPT 표지						
소개서 목차:간지						
회사 소개 및 비전						
서비스 4가지 특징						
서비스 장점 및 특징						
서비스 관리 프로세스						
상품 소개						
7단계 프로세스						
Ch 03. 직접 계획해보자! 사업 계획서						
기획/계획/제안/보고서 만들기						
기획/계획의 차이점						
계획서 표지						
일반 현황 분류						
시장 현황						
계획 내용						
서비스 내용						
경쟁업체 분석						
당사 경쟁력						
비즈니스모델						
진행 프로세스						
지역별 점포 현황						
관계도						
Ch 04. 직접 제안해보자! 사업 제안서						
사업 제안서에 들어가는 것들						
사업 제안서 표지						
회사소개						
시장분석						
프로세스						
목표 및 성과						
운영계획 및 관리도						
고객분석						
제안 내용						
시기별 계획						
Ch 05. 직접 입점해보자! 입찰제안서 PPT						
입찰 제안 표지, 목차, 간지						
제안 개요						
제안 내용						
제안 근거						
운영 계획						
운영 전략						
진행 프로세스						
제안 특징						
마케팅 전략						
마케팅 사례						
Ch 06. 직접 보고해보자! 보고서 PPT						
보고서 소개, 표지						
회사 개요						
추진현황						
3가지 특징						
4가지 특징						
추진배경						
추진성과&SWOT						
현황조사						
Ch 07. 직접 발표해보자! 발표형 PPT						
발표형 PPT 소개, 표지 목차 디자인						
이미지/텍스트 조합 디자인						
인포그래픽 차트 디자인						
지도 활용 디자인						
인물 이미지 활용 디자인						
그라데이션 활용 디자인						
Ch 08. 직접 강의해보자! 강의형 PPT						
글이 많은 강의자료 PPT 깔끔하게 만들기						
다수의 이미지를 보기 좋게 디자인 해보기						
강조하고 싶을 때 사용하는 PPT 슬라이드 디자인						
도형을 활용해 차트, 그래프 디자인 만들기						
기존 강의자료를 세련되게 바꾸는 방법						
Ch 09. 직접 만들어보자! 공모전 PPT						
공모전이란? 상황분석 1						
상황분석 2						
문제 도출						
타겟 분석						
인사이트						
스케줄링						
Ch 10. 직접 과제만들자! 대학과제 PPT						
초압축 파워포인트 꿀팁						
포트폴리오 챕터별 구성하기						
실습 - 표지 및 기본 레이아웃 만들기						
실습 - 프로필 페이지 만들기						
실습 - 핵심키워드 페이지 만들기						
실습 - 경력사항 페이지 만들기						
실습 - 플랜 및 포부 페이지 만들기						
Ch 11. 유튜브 썸네일 만들기						
발표형 PPT 소개, 표지 목차 디자인						
이미지/텍스트 조합 디자인						
인포그래픽 차트 디자인						
Ch 12. 카드뉴스 만들기						
카드뉴스 기획, 제작 시 주의할 점 알아보기						
레트로 느낌 카드뉴스 템플릿 만들어보기 - 표지만들기						
레트로 느낌 카드뉴스 템플릿 만들어보기 - 내용 만들기						
스토리텔링형의 카드뉴스 만들어보기 1 - 기획안 분석하기						
스토리텔링형의 카드뉴스 만들어보기 2
----------------------------------------------------------------						
05. 고퀄리티 PPT 제작을 위한 포토샵과 일러스트레이터
Ch 01. 개요						
우리가 디자인을 배워야하는 이유						
포토샵과 디자인						
포토샵과 일러스트의 개념과 차이						
Ch 02. 포토샵						
포토샵 인터페이스 알아보기						
기본 기능과 단축키						
이미지 보정법						
배경 제거하기						
글자 다루기						
도형과 그림자						
실전 적용 포스터 마무리						
Ch 03. 일러스트레이터						
일러스트 인터페이스 알아보기						
기본 기능과 단축키						
펜툴 사용하기						
이미지 삽입하기 포토샵과 일러스트 연동						
도형과 펜툴, 패스파인더 응용						
컬러와 패턴						
글자 변형하기						
실전 적용 포스터 마무리						
Ch 04. 디자인 참고 사이트와 공부법						
디자인 참고 사이트와 공부법
----------------------------------------------------------------					
06. 키노트 기초와 실전 강의
키노트 인터페이스 - 오리엔테이션						
키노트 인터페이스 - keynote 인터페이스 및 셋업						
슬라이드 사용법과 마스터슬라이드 이해						
슬라이드&텍스트						
레이어&도형						
표&차트						
이미지&비디오						
응용, 추가기능						
애니메이션 - 기초						
애니메이션 - 시간						
키노트로 텍스트 모션그래픽 만드는 법						
편집 프로그램에 모션그래픽 응용하기						
인포그래픽 제작법						
인포그래픽 제작법						
애니메이션 템플릿 만들기						
슬라이드 마스터를 사용한 템플릿 만들기						
PDF 출력						
GIF 움직이는 이미지 출력						
동영상 출력						
HTML 출력						
파워포인트, 이미지 출력						
그 외 출력						
아이패드 키노트 I - 슬라이드, 텍스트, 도형 사용법						
아이패드 키노트 II - 애니메이션 사용법						
아이패드 키노트 II - 내보내기						
발표		
================================================================================================================================		
박은종의 객체지향 설계를 위한 디자인패턴 with 자바
----------------------------------------------------------------
01. 박은종의 객체지향 설계를 위한 디자인패턴 with 자바
Ch 01. 디자인 패턴을 배우는 이유					
객체지향 프로그래밍과 객체지향 설계					
객체지향 설계 기본					
subclassing 과 subtyping					
SOLID 원칙					
디자인 패턴에 대하여					
UML 클래스 다이어그램					
Ch 02. 하위 클래스에 위임하기					
Template Method - 구체적인 처리를 하위 클래스에 위임					
Factory Method - 인스턴스의 생성을 하위 클래스에 위임					
Ch 03. 클래스의 인스턴스 생성 패턴					
Singleton - 인스턴스가 하나만 존재하도록 구현					
Prototype - 프로토타입을 복사하여 인스턴스를 생성					
Abstract Factory - 관련 객체의 집합을 생성하는 인터페이스를 제공					
Builder - 동일한 생성 공정이 서로 다른 구현을 만들어 내기					
Ch 04. 분리하여 생각하기					
Strategy - 여러 정책들이 추가되고, 교체가능 하도록 구현					
Bridge - 기능의 계층과 구현의 계층을 분리하여 구현					
Ch 05. 호환					
Adapter - 필요한 형태로 수정하여 사용하도록 클래스 연결					
Ch 06. 동일시하기와 위임하기					
Decorator - 장식자와 실제 내용물을 동일 시 함					
Composite - 그릇과 실제 내용물을 동일 시 함					
Ch 07. 상태를 관리					
State - 상태에 따른 여러 기능을 분리하여 처리 함					
Memento - 상태를 보존함					
Observer - 지켜보다 상태가 변화 하면 통지함					
Ch 08. 간단하게 처리하기					
Facade - 창구는 하나 뿐					
Mediator - 카운셀러는 하나 뿐					
Ch 09. 구조 안을 돌아다니기					
Iterator - 요소를 하나씩 열거하여 처리함					
Visitor - 구조 안을 돌아 다니며 처리 함					
Chain of responsibility - 책임을 떠넘기기					
Ch 10. 낭비를 없애기					
Flyweight - 동일한 것을 공유하여 낭비를 없앰					
Proxy - 필요하기 전까지는 대리인을 사용하고 꼭 필요한 경우에만 만듦					
Ch 11. 명령					
Command - 요구나 전달할 내용을 클래스로 표현					
Ch 12. 해석					
Interpreter - 문법의 규칙을 클래스로 표현
Ch 13. Refactoring with JAVA					
리팩토링이란?					
매직 넘버를 상수로 바꾸기					
제어를 위한 플래그 삭제하기					
널 객체 사용하기					
하위 클래스로 분류하기					
전략, 상태패턴 적용하기					
생성자를 팩토리 메서드로 바꾸기					
상속을 위임으로 바꾸기					
에러를 예외처리 하기					
클래스와 메서드 추출하기					
================================================================================================================================
TypeScript & Angular 실전 올인원 패키지
----------------------------------------------------------------
Part 1-1. 벨로퍼트와 함께하는 모던 자바스크립트
Ch 01. JavaScript 입문							
JavaScript는 뭔가요							
Hello-JavaScript							
변수							
연산자 - 산술연산자, 대입연산자							
연산자 - 논리연산자							
연산자 - 비교연산자, 문자열 붙이기							
조건문 - if, else, else if							
조건문 - switch case							
함수							
함수 - Template Literal							
함수 - 연습							
함수 - 화살표 함수							
객체							
객체 - 비구조화 할당							
객체 - 객체 안에 함수 넣기							
객체 - Getter 와 Setter 함수							
배열							
반복문 - for							
반복문 - while							
반복문 - for...of, for...in							
반복문 - continue 와 break							
반복문 - 연습과 퀴즈							
배열 내장함수 - forEach							
배열 내장함수 - map							
배열 내장함수 - filter							
배열 내장함수 - splice 와 slice							
배열 내장함수 - shift, pop, unshift, push							
배열 내장함수 - reduce							
배열 내장함수 - reduce 다른 예시							
배열 내장함수 - 복습과 퀴즈							
프로토타입과 클래스 - 객체 생성자							
프로토타입과 클래스 - 객체 생성자 상속하기							
프로토타입과 클래스 - ES6 Class							
프로토타입과 클래스 - 연습 - Food class 만들기
Ch 02. 알고 있으면 유용한 JS 문법							
삼항연산자							
Truthy와 Falsy							
단축 평가 논리 계산법							
함수의 기본 파라미터							
조건문 더 스마트하게 쓰기							
비구조화 할당							
spread 와 rest - spread 연산자							
spread 와 rest - rest							
spread 와 rest - 함수 파라미터에서의 rest							
spread 와 rest - 함수 인자에서의 spread							
scope의 이해 - scope 이해하기							
scope의 이해 - hoisting							
Ch 03. 자바스크립트에서 비동기 처리 다루기							
비동기 처리의 이해							
Promise							
async, await							
Promise all, Promise.race							
Ch 04. HTML과 JavaScript 연동하기							
카운터 만들기							
모달 만들기							
마무리
----------------------------------------------------------------					
Part 1-2. 이웅재 강사님의 자바스크립트
자바스크립트란 무엇인가							
Various JavaScript Runtime							
실습을 위한 준비							
Expression Statement							
Keywords, Reserved Words							
Identifier							
Comments							
변수와 상수							
변수의 유효 범위							
var 와 호이스팅							
자료형							
조건문 - 1							
조건문 - 2							
조건문 - 3							
조건문 - 4							
반복문 - 1							
반복문 - 2							
함수 A							
함수 B							
함수 C							
객체 A							
객체 B							
객체 C							
객체 D							
클래스 A							
클래스 B							
클래스 C							
클래스 D							
Promise - 1							
Promise - 2							
Promise - 3							
Promise - 4							
async function 과 await - 1							
async function 과 await - 2							
프로젝트 개요							
리스트 페이지							
로그인 페이지							
책 추가하기							
책 정보 보기							
책 정보 수정
----------------------------------------------------------------							
Part 2. TypeScript
Intro - 코스소개							
TypeScript 소개 및 개발환경 구성							
TypeScript 컴파일러							
TypeScript 컴파일러 설정파일							
변수선언							
기본타입							
인터페이스							
함수형 타입							
enum 타입							
클래스 - 1							
클래스 - 2							
제네릭 - 1							
제네릭 - 2							
제네릭 - 3							
Intersection & Union Types							
타입 별칭							
인덱스타입							
Parcel과 모듈							
프로젝트 구성 및 보드판 작성 - 1							
프로젝트 구성 및 보드판 작성 - 2							
프로젝트 구성 및 보드판 작성 - 3							
게임구현 - 1							
게임구현 - 2							
게임구현 - 3							
----------------------------------------------------------------
Part 3.Angular
Angular 시작하기							
Angular 란 무엇인가							
개발 환경 설정							
Quick Start							
Angular Cli							
Angular Component							
Component 는 무엇인가							
Component 를 만들고 사용하기							
Component 내 로직 처리							
컴포넌트 간 통신 (1)							
템플릿과 데이터 바인딩							
컴포넌트의 생명 주기							
컴포넌트 간 통신							
Directive							
Directive 사용하기							
나만의 Attribute Directive 만들기							
나만의 Structural Directive 만들기							
Pipe							
내장 파이프 알아보기							
사용자 정의 파이프							
Angular Router							
라우팅 사용하기							
a 태그로 이동하기							
Params 사용하기							
QueryParams 사용하기							
코드로 경로 이동하기							
NotFound 처리하기							
Service							
Angular Serbice 와 Dependency Injection							
@Injectable 로 주입하기							
컴포넌트에 주입하기							
모듈에 주입하기							
여러가지 주입 방식							
HttpClientModule, HttpClient							
Angular Material							
Angular Material 적용하기							
Angular Material 사용하기 A - Input							
Angular Material 사용하기 B - Toolbar							
Angular Material 사용하기 C - Grid list							
Angular Material 사용하기 D - Dialog							
Angular Material 사용하기 E - Table							
SPA Deploy							
CSR 과 Angular 프로젝트 빌드하기							
AWS S3 에 배포							
serve 패키지를 이용한 배포							
express 를 이용한 배포							
nginx 를 이용한 배포							
Angular Universal							
ssr 과 universal 설정하기							
라우팅 추가하기							
http 응답을 함께 랜더링하기							
Angular Unit Test							
Karma, Jasmine, Component Test							
TDD 로 앵귤러 컴포넌트 만들기 - 1							
TDD 로 앵귤러 컴포넌트 만들기 - 2			
----------------------------------------------------------------				
Part 4. RxJS
RxJS 사전지식							
코스 소개							
함수형 프로그래밍							
고차함수							
메소드 체이닝							
Iterable, Iterator							
Promise							
RxJS 스타트							
RxJS 설치하기 및 프로젝트 구성							
Observable 생성 함수							
Operator를 알아보자							
기본적인 Operator 알아보기 (1)							
기본적인 Operator 알아보기 (2)							
마블 다이어그램으로 비주얼라이제이션 해보기							
예외처리 살펴보자							
Subject 살펴보기
================================================================================================================================
AWS/Docker 실전 클라우드 서버 구축 올인원 패키지
----------------------------------------------------------------
01. AWS & Docker를 활용한 DevOps 구축
오리엔테이션과 시작하기					
devOps의 필요성					
Jira Confluence 설명					
AWS와 Docker의 필요성					
협업 툴 활용 A-Z					
Jira 협업툴 소개					
AWS 설치 및 제거요강					
Jira 협업툴 설치하기					
Jira 이슈 이해하기					
Jira API 소개 및 Postman 활용하기					
Jira 관리자 소개					
Jira 워크 플로우 설정하기					
Jira 워크 플로우 설정하기 (실습)					
Jira CustomField 설정하기					
Jira DB 구조 설명					
Confluence 협업툴 소개					
Confluence 협업툴 사용방법					
스프링 프로젝트 세팅(1)					
스프링 프로젝트 세팅(2)					
스프링 프로젝트 세팅 실습(1) - 1					
스프링 프로젝트 세팅 실습(1) - 2					
스프링 프로젝트 세팅 실습 (2)					
빗버킷 소개(3)					
빗버킷 활용(4)					
빗버킷 소개(3)_실습					
빗버킷 활용(4)_실습				
Jenkins 소개 및 설치#1					
Jenkins 소개 및 설치#1 실습					
Jenkins 소개 및 설치#2					
Jenkins 소개 및 설치#2(실습)					
Jenkins 배포 및 파이프라인#3					
Jenkins 배포 및 파이프라인#3(실습)					
AWS Server					
RDS 설정 - 1					
RDS 설정 - 2					
RDS 설정 - 3					
RDS 설정 - 4					
RDS 설정 - 5					
S3 설정 및 이미지 업로드					
카카오 로그인 - 1					
카카오 로그인 - 2					
카카오 로그인 - 3					
카카오 로그인 - 4					
S3로 이미지 업로드 및 API 활용 - 1					
S3로 이미지 업로드 및 API 활용 - 2					
S3로 이미지 업로드 및 API 활용 - 3					
S3로 이미지 업로드 및 API 활용 - 4					
S3로 이미지 업로드 및 API 활용 - 5					
지라 이슈 ID, BitBucket 연결 - 1					
지라 이슈 ID, BitBucket 연결 - 2					
Jenkins Pipe Line 만들기 - 1					
Jenkins Pipe Line 만들기 - 2					
DOCKER 활용하기					
도커 설치하기 & 컨테이너 접속하기					
도커 이미지 만들기 (Dockerfile) 및 실행 - 1					
도커 이미지 만들기 (Dockerfile) 및 실행 - 2					
Docker Hub & Docker API - 1					
Docker Hub & Docker API - 2					
DevOps 강의를 마치며					
----------------------------------------------------------------	
02. AWS 서버리스 프로젝트
서버리스					
등장배경 및 소개					
한계점 및 장단점					
서버리스 프로젝트 소개 및 준비					
AWS 소개					
어플리케이션 및 아키텍처 소개					
실습환경준비					
서버리스 어플리케이션 개발(1)					
Front-end 화면 개발 1					
Front-end 화면 개발 2					
S3 소개 및 구축 - 1					
S3 소개 및 구축 - 2					
CloudFront 소개 및 구축					
DynamoDB 소개 및 구축					
SNS로 관리형 메세지 만들기					
서버리스 어플리케이션 개발 (2)					
IAM 정책 및 역할 만들기					
Lambda 함수작성 A - 데이터 읽기					
Lambda 함수작성 B - 데이터 삽입					
Lambda 함수작성 C - Lambda Layer 패키지 작성방법					
Lambda 함수작성 D - 참가증 이미지 만들기 - 1					
Lambda 함수작성 E - 참가증 이미지 만들기 - 2					
서버리스 어플리케이션 개발 (3)					
API Gateway와 Lambda 싱크 (GET)					
API Gateway와 Lambda 싱크 (POST)					
03. API Gateway와 Front-end 연동					
결과물 반영 및 확인					
요약정리 및 고찰					
================================================================================================================================
The Red : 4천만 MAU를 지탱하는 서비스 설계와 데이터 처리 기술 By 카카오페이지 기술전략이사 윤진석
----------------------------------------------------------------
01. The RED 오프닝
The Red_윤진석 오프닝
----------------------------------------------------------------					
02. 백엔드개발자의 숙명
Intro_소개					
대규모 서비스에서 발생하는 기술적 이슈 및 장애 사례					
----------------------------------------------------------------
03. 확장성 있는 시스템 설계와 소프트웨어 디자인이란?
확장성과 안정성있는 서비스 시스템 설계 패턴					
대규모 서비스에서 알고리즘과 자료구조의 중요성					
코드 유지보수성과 확장성을 높이는 디자인 패턴					
데이터 모델과 트랜잭션 디자인					
개발 프로세스 운영 관리 및 배포 시스템 디자인
----------------------------------------------------------------
04. 대규모 서비스에서 발생하는 데이터 처리					
데이터의 개념과 종류에 대한 이해					
관계형 데이터베이스와 NoSQL, 그리고 파일 저장소					
서비스를 위한 실시간 속성 데이터 처리					
데이터 분석과 응용을 위한 배치 처리					
데이터 처리의 최신 기술 동향과 설계 방향
----------------------------------------------------------------				
05. 백엔드 개발자 성장을 위한 매뉴얼
백엔드 엔지니어링의 역할과 범위
================================================================================================================================
MSA 환경의 효율적인 DevOps를 위한 Istio
----------------------------------------------------------------
01. 현대 클라우드 인프라와 서비스 아키텍쳐 패턴
오리엔테이션					
OT					
DevOps와 SRE 개념					
쿠버네티스와 istio가 만났을때					
쿠버네티스가 뭐야?					
서비스 메쉬가 뭐야?					
istio와 envoy					
----------------------------------------------------------------
02. Istio 무작정 따라해보기
쿠버네티스 환경 구성					
도커 쿠버네티스 환경 세팅					
쿠버네티스를 관리해보자					
쿠버네티스 네트워크에 대한 기본이해					
이스티오 환경 구성					
istioctl을 이용한 환경구성					
istio-operator를 이용한 환경구성					
사이드카 인젝션					
호스트 개념과 트래픽 라우팅					
istio CLI 사용과 실무 팁					
kiali를 통해 시스템 가시성 올리기	
----------------------------------------------------------------				
03 istio 동작원리 이해하기
- Envoy와 istio
envoy의 용어 정리
envoy proxy 가볍게 맛보기
envoy xDS 이해하기

- istio 아키텍처
istio 트래픽 흐름 이해하기
istio 리소스 이해하기(VirtualService)
istio 리소스 이해하기(DestinationRule)
istio 리소스 이해하기(Gateway)
istio 리소스 이해하기(ServiceEntry)
- 컨트롤 플레인
istio 컨트롤 플레인의 과거와 현재
파일럿
갤리
시타텔
----------------------------------------------------------------
04. 실무에서 Istio 잘 사용하기
- 트래픽 매니징					
request 라우팅 및 응용하기					
fault injection					
weight 기반 트래픽 쉬프팅.					
서킷브레이커					
패킷 미러링					

- 보안 강화하기					
보안의 중요성					
mTLS란					
istio를 활용한 손쉬운 Zero Trust 구현					
mTLS 커넥션 실제 패킷 디버깅해보기					
AuthoriationPolicy 적용하기					
JWT Token을 활용한 접근제어					
점검을 해야해! 트래픽 차단하기					

- EnvoyFilter 활용하기					
헤더 삽입하기					
요청 바디 사이즈 제한하기					
global rate limit 설정하기					
filter에 custom code 활용해보기					

- 모니터링					
그라파나와 프로메테우스					
프로메테우스와 istio메트릭의 조화					
Envoy metric과 istio metric 살펴보기					
source service 와 destination service					
로그 모니터링과 디버깅					
Envoy Access log 와 envoy flag					
중요 메트릭과 실무 모니터링 팁					

- 트레이싱					
tracing의 기본					
mesh visualizing					
kiali 잘 활용하기					
실무에서 사용하는 tracing					

- Istio 디버깅					
istio configdump					
istio clusterdump					
istioctl 활용 팁					


================================================================================================================================KKafka 완전 정복, 클러스터 구축부터 MSA 환경 활용까지 Online.
----------------------------------------------------------------
01. Confluent 엔지니어가 설명해주는 Apache Kafka
01. Apache Kafka 기본 개념 및 이해							
Apache Kafka							
Topic, Partition, Segment							
Broker, Zookeeper							
Producer							
Consumer							
Replication							
In-Sync Replicas							
02. Apache Kafka 심화 개념 및 이해							
Producer Acks, Batch, Page Cache, Flush							
Replica Failure							
Replica Recovery							
Consumer Rebalance							
Partition Assignment Strategy							
Cooperative Sticky Assignor							
Kafka Log File							
Exactly Once Semantics(EOS)							
Exactly Once Semantics(EOS) 2							
03. Apache Kafka 구성 및 관리							
Apache Kafka and Confluent Reference							
Architecture							
Kafka in Real Environment							
Installation, Cluster Configuration							
Log Retention, Cleanup Policy							
Kafka Cluster Upgrade, Expansion, Shrink							
04. Apache Kafka Connect 개념 및 이해							
Apache Kafka Connect							
Single Message Transform(SMT), Converter							
05. Confluent Schema Registry 개념 및 이해							
Confluent Schema Registry							
06. Kafka Streams와 ksqlDB 개념 및 이해							
Kafka Streams, ksqlDB							
07. Confluent Certification 소개 및 팁들							
Confluent Certifications, Tips							
Sample Questions
----------------------------------------------------------------						
02. Spring for Kafka
01. Orientation							
오리엔테이션							
02. Spring for Kafka 기본							
Quick Start							
카프카 토픽 생성/삭제							
Publish Messages							
Consume Messages							
03. Manage & Stream 사용하기							
토픽 관리하기							
간단한 성능 모니터링							
Error Handling							
Kafka Stream with Spring
----------------------------------------------------------------						
03. 실무에서 쉽게 써보는 Kafka: 클러스터 구축부터 MSA 환경에서 활용까지
01. Orientation							
오리엔테이션							
02. Kafka 설치와 설정							
Kafka 간단 요약							
Kafka 빠르게 설치해보기							
Kafka 클러스터 구축해보기							
Kafka 설정 꼼꼼히 들여다보기							
Kakfa 운영해 보기 (AKHQ)							
Kakfa 운영해 보기 (Kafka Burrow)							
03. Kafka Data Pipeline 구축							
데이터 파이프라인 구축해보기							
Confluent Kafka 추가기능							
Kafka Connect 추가해보기							
04. MSA 환경에서의 Kafka 활용							
MSA & EDA							
EDM 서비스 구현	
----------------------------------------------------------------						
04. 실시간 모니터링을 위한 Kafka 매트릭 이해
04. Apache Kafka 모니터링 시스템 실습							
Elastic Stack기반 모니터링 실습 (Elastic Stack 설치)							
Elastic Stack기반 모니터링 실습 (JMX Metric 수집 설정)							
Elastic Stack기반 모니터링 실습 (시각화)							
Elastic Stack기반 모니터링 실습 (Dashboard)							
Elastic Stack기반 모니터링 실습 (Beats활용)							
클라우드 서비스(DataDog)을 활용한 모니터링 실습							
05. Apache Kafka 모니터링 활용 (성능 최적화)							
처리성능 개선을 위한 Kafka 설정							
처리성능 모니터링을 위한 Metric 시각화							
전송 지연 최소화를 위한 Kafka 설정							
전송 지연 모니터링을 위한 Metric 시각화							
서비스 가용성을 위한 Kafka 설정							
서비스 가용성을 위한 Metric 시각화							
04. Apache Kafka 모니터링 시스템 실습							
Elastic Stack기반 모니터링 실습 (Elastic Stack 설치)							
Elastic Stack기반 모니터링 실습 (JMX Metric 수집 설정)							
Elastic Stack기반 모니터링 실습 (시각화)							
Elastic Stack기반 모니터링 실습 (Dashboard)							
Elastic Stack기반 모니터링 실습 (Beats활용)							
클라우드 서비스(DataDog)을 활용한 모니터링 실습							
05. Apache Kafka 모니터링 활용 (성능 최적화)							
처리성능 개선을 위한 Kafka 설정							
처리성능 모니터링을 위한 Metric 시각화							
전송 지연 최소화를 위한 Kafka 설정							
전송 지연 모니터링을 위한 Metric 시각화							
서비스 가용성을 위한 Kafka 설정							
서비스 가용성을 위한 Metric 시각화							
06. Apache Kafka 모니터링 과정 마무리							
GCP 자원 삭제							
전체 과정 요약 정리							

================================================================================================================================
한 번에 끝내는 AWS 인프라 구축과 DevOps 운영 초격차 패키지 Online.
----------------------------------------------------------------
01. DevOps의 기본 개념
Ch 01. 첫 인사 및 강의 개요								
Ch 02. DevOps 소개								
CH02_01 DevOps 개요								
CH02_02 DevOps 엔지니어의 역할								
CH02_03 DevOps 엔지니어 성장 전략								
Ch 03. 강의 준비								
CH03_01 개요								
CH03_02 Homebrew 설치 및 사용법 (macOS)								
CH03_03 WSL2 Ubuntu 20.04 LTS 구성 (Windows)								
CH03_04 AWS 소개 및 실습 계정 생성								
CH03_05 AWS 프리티어 소개								
CH03_06 AWS 계정 SSH Key 등록 및 EC2 접속 방법								
CH03_07 AWS CLI 도구 설치 및 사용								
CH03_08 AWS CLI 도구 설치 (Ubuntu)								
CH03_09 AWS 계정 MFA 활성화								
CH03_10 AWS 비용 이슈 대처법								
----------------------------------------------------------------
02. AWS 기반 소규모 & 중규모 아키텍트 설계
Ch 01 . AWS 기초와 VPC								
CH01_01. (개요) 클라우드 컴퓨팅								
CH01_02. (개요) AWS의 주요 서비스 소개								
CH01_03. (개요) 네트워킹의 기본								
CH01_04. (VPC) AWS 네트워킹의 동작원리 1								
CH01_05. (VPC) AWS 네트워킹의 동작원리 2								
CH01_06. (VPC) AWS 네트워킹의 동작원리 3								
CH01_07. (VPC) VPC 와 Private, Public Subnet 만들기								
CH01_08. (VPC) Internet Gateway과 라우팅 테이블 생성								
CH01_09. (VPC) NACL 설정하기1								
CH01_10. (VPC) NACL 설정하기2								
CH01_11. (VPC) Bastion Host 만들기								
CH01_12. (VPC) NAT Gateway 만들기								
CH01_13. (VPC) VPC EndPoint 만들기			
Ch 02. 소규모 아키텍트								
CH02_01. (개요) 모놀리식 아키텍처 vs 마이크로서비스 아키텍처								
CH02_02. (개요) 프로젝트 개요(온라인 주문 어플리케이션)								
CH02_03. (설계) 도메인 주도 설계 개요								
CH02_04. (설계) 어플리케이션 이벤트스토밍								
CH02_05. (백엔드) Django 기초 1								
CH02_06. (백엔드) Django 기초 2								
CH02_07. (백엔드) Django 기초 3								
CH02_08. (백엔드) 온라인 주문 어플리케이션 백엔드 Overview								
CH02_09. (백엔드) Models 제작								
CH02_10. (백엔드) Order 백엔드 개발1								
CH02_11. (백엔드) Order 백엔드 개발2								
CH02_12. (백엔드) Order 백엔드 개발3								
CH02_13. (백엔드) Boss 백엔드 개발1								
CH02_14. (백엔드) Boss 백엔드 개발2								
CH02_15. (백엔드) Delivery 백엔드 개발								
CH02_16. (인프라) 데이터베이스 구축(AWS RDS)								
CH02_17. (인프라) Django 개발 결과를 EC2에 배포하기								
CH02_18. (인프라) 로드밸런서(L4 , L7) 의 동작원리와 AWS ELB								
CH02_19. (인프라) ALB 에 인스턴스 연결하여 웹서비스 실행하기								
CH02_20. (인프라) ALB Rule 설정하여 인스턴스 분기하기								
CH02_21. (인프라) AWS Route53 과 DNS 의 동작원리								
CH02_22. (인프라) AWS Route53 도메인 등록과 Hosted zone 설정하기								
CH02_23. (인프라) AWS Route53 DNS 기반 인증서 발급과 ALB에 https 설정하기								
CH02_24. (인프라) AWS CloudFront 와 CDN의 동작원리								
CH02_25. (인프라) AWS CloudFront 생성 및 캐싱 설정								
CH02_26. (인프라) 어플리케이션 구동 (Nginx, Gunicorn, Supervisor)								
CH02_27. (인프라) 오토스케일링 설정 (AWS Autoscaling Group 와 AMI)								
AWS ECR / AWS Fargate								
ECS-CLI Compose를 활용한 다중 Container 배포								
컨테이너 오토스케일링 설정 (AWS CloudWatch Event, ECS autoscale)								
보안이 필요한 환경변수 클라우드 관리 (AWS KMS)								
코드 레파지토리와 브랜치관리 (AWS CodeCommit)								
컨테이너 무정지 재배포 (AWS CodeDeploy)								
Ch 03. 중규모 아키텍트								
CH03_1 (백엔드) Django Session 활용 1								
CH03_2 (백엔드) Django Session 활용 2								
CH03_3 (인프라) Docker 개요								
CH03_4 (인프라) Django Docker Build								
CH03_5 (인프라) Nginx Docker Build								
CH03_6 (인프라) Docker-Compose를 활용한 배포								
CH03_07. (인프라) AWS ECR에 컨테이너 업로드								
CH03_08. (인프라) AWS Fargate을 통한 배포								
CH03_09. (인프라) AWS CLI 개요								
CH03_10. (인프라) AWS CLI를 통한 작업 정의1								
CH03_11. (인프라) AWS CLI를 통한 작업 정의2								
CH03_12. (인프라) ECS-CLI Compose를 활용한 다중 Container 배포1								
CH03_13. (인프라) ECS-CLI Compose를 활용한 다중 Container 배포2								
CH03_14. (인프라) AWS KMS 개요								
CH03_15. (인프라) AWS KMS 활용 실습(SDK 활용)								
CH03_16. (인프라) AWS CodeCommit								
CH03_17. (인프라) AWS CodeDeploy1								
CH03_18. (인프라) AWS CodeDeploy2								
----------------------------------------------------------------
03. AWS 기반 대규모 아키텍트 설계
Ch 01. 마이크로서비스								
CH01_01. (개요) 마이크로서비스의 장단점								
CH01_02. (설계) 마이크로서비스 간의 통신 방식(Kafka, RabbitMQ)								
CH01_03. (설계) 마이크로서비스 아키텍처								
CH01_04. (개발) 도메인 서비스 구현 - Django, Docker								
CH01_05. (개발) 도메인 서비스 구현 - Django, Mysql								
CH01_06. (개발) 도메인 서비스 구현 - Django, Models								
CH01_07. (개발) 도메인 서비스 구현 - Django, RestFramework								
CH01_08. (개발) 도메인 서비스 구현 - Django, Viewsets								
CH01_09. (개발) 도메인 서비스 구현 - API 구동 테스트								
CH01_10. (개발) 도메인 서비스 구현 - Flask, Docker								
CH01_11. (개발) 도메인 서비스 구현 - Flask, Models								
CH01_12. (개발) 도메인 서비스 구현 - Flask, Migration								
CH01_13. (개발) RabbitMQ 설치 및 설정								
CH01_14. (개발) RabbitMQ Setup 및 이벤트 발행 테스트								
CH01_15. (개발) RabbitMQ Setup 및 이벤트 구독 테스트								
CH01_16. (개발) Docker 패키징과 구동 테스트								
CH01_17. (개발) 데이터복제 이벤트 처리 - RabbitMQ								
CH01_18. (개발) 데이터복제 이벤트 처리 - Internal HTTP								
CH01_19. (인프라) 마이크로서비스 아키텍처 개발 시 고려해야 하는 사항들								
CH01_20. (인프라) 마이크로 아키텍처 개발 시 문제점들								
CH01_21. (인프라) AWS CodePipeline을 활용한 CI CD 개요								
CH01_22. (인프라) 코드 테스트 파이프라인 구축								
CH01_23. (인프라) Elastic Beanstalk를 활용한 배포								
CH01_24. (인프라) AWS Code Pipeline을 활용한 CD 파이프라인 구축								
Ch 02. 서버리스								
CH02_01. (개요) 서버리스 아키텍트 소개								
CH02_02. (개요) AWS Lambda 소개								
CH02_03. (API 게이트웨이) API 게이트웨이란								
CH02_04. (API 게이트웨이) API 게이트웨이의 구성 요소들								
CH02_05. (API 게이트웨이) Lambda 함수 생성 및 모니터링								
CH02_06. (API 게이트웨이) Lambda와 HTTP API Gateway 연결								
CH02_07. (API 게이트웨이) Lambda와 Rest API Gateway 연결								
CH02_08. (API 게이트웨이) Canary 배포								
CH02_09. (API 게이트웨이) CORS								
CH02_10. (AWS Lambda) 스케일링과 동시성								
CH02_11. (AWS Lambda) 버전관리와 Alias								
CH02_12. (AWS Lambda) 환경변수 설정								
CH02_13. (AWS Lambda) Layers								
CH02_14. (AWS Lambda) EFS 파일시스템 생성								
CH02_15. (AWS Lambda) EFS 파일시스템 연동								
CH02_16. (AWS Lambda) Step Functions 권한 설정								
CH02_17. (AWS Lambda) Lambda Step Functions 구현								
CH02_18. (DynamoDB) 데이터 아키텍처의 변화								
CH02_19. (DynamoDB) DynamoDB 개요와 Index 구성								
CH02_20. (DynamoDB) DynamoDB 구성하기								
CH02_21. (DynamoDB) Lambda로 DynamoDB 접근								
CH02_22. (DynamoDB) Python으로 DynamoDB 접근								
CH02_23. (부록) AWS SAM 개요 및 실습								
----------------------------------------------------------------
04. 코드를 통한 인프라 관리(IaC)
Ch 01. 파트 개요 및 실습 준비								
CH01_01. 개요								
CH01_02. IaC - 형상 관리(Configuration Management) - 이미지 빌드								
CH01_03. 테라폼 설치 및 기본 설정								
CH01_04. 테라폼 설치 (Ubuntu)								
CH01_05. 패커 설치 및 기본 설정								
CH01_06. 패커 설치 (Ubuntu)								
CH01_07. 앤서블 설치								
CH01_08. 앤서블 설치 (Ubuntu)								
Ch 02. 테라폼을 이용한 인프라 관리								
CH02_01. 테라폼 소개								
CH02_02. 테라폼 다루어보기								
CH02_03. 테라폼 HCL 기초 문법								
CH02_04. 테라폼 HCL resource와 data								
CH02_05. 테라폼 HCL module								
CH02_06. 테라폼 HCL variable & local & output								
CH02_07. 테라폼 HCL count와 for_each								
CH02_08. 테라폼 HCL 조건문 (Conditional)								
CH02_09. 테라폼 HCL 반복문 (For)								
CH02_10. 테라폼 상태 저장소 (Backend)								
CH02_11. 테라폼 상태 관리								
CH02_12. 테라폼 리소스 강제 교체하기 (taint & untaint)								
CH02_13. 테라폼 워크스페이스 관리								
CH02_14. 테라폼 클라우드 사용 및 아틀란티스 소개								
CH02_15. 테라폼 모듈 작성 방법								
CH02_16. 테라폼 terraform_remote_state 데이터소스 활용								
CH02_17. 테라폼 워크스페이스 디렉토리 구성 전략								
CH02_18. 테라폼 Provisioner와 EC2 Userdata								
CH02_19. 실습 AWS VPC에 OpenVPN 구성								
Ch 05. Packer을 이용한 머신 이미지 관리								
CH03_01. 패커 소개								
CH03_02. 패커 다루어보기								
CH03_03. 패커 HCL 기초 문법								
CH03_04. 빌더 (Builder)								
CH03_05. 선택적 빌드 (only & except)								
CH03_06. 프로비저너 (Provisioner)								
CH03_07. 데이터 소스 활용 (Data-source)								
CH03_08. 후 처리기 (Post-processor)								
CH03_09. 디버깅하는 방법 (Debugging)								
CH03_10. 패커 CLI 사용 방법								
CH03_11. AWS VPC에 OpenVPN과 Grafana 구성								
Ch 04. 앤서블을 이용한 서버 형상 관리								
CH04_01. 앤서블 소개								
CH04_02. 인벤토리 (Inventory)								
CH04_03. 애드혹 명령어 (Ad-hoc Command)								
CH04_04. 플레이북 (Playbook)								
CH04_05. 모듈 (Module)								
CH04_06. 핸들러 (Handler)								
CH04_07. 변수 (Variables)								
CH04_08. 반복문 (Loop)								
CH04_09. 조건문 (Conditional)								
CH04_10. 상세 (Facts)								
CH04_11. AWS 메타데이터 상세 (AWS Metadata Facts)								
CH04_12. AWS VPC에 OpenVPN과 Grafana 구성		
----------------------------------------------------------------						
05. 도커와 쿠버네티스를 이용한 서비스 운영
Ch 01. 파트 개요 및 실습 준비								
CH01_01. 개요								
CH01_02. docker 및 docker-compose 설치 (Ubuntu)								
CH01_03. docker 및 docker-compose 설치 (macOS)								
CH01_04. kubectl과 kustomize 설치 (Ubuntu)								
CH01_05. kubectl과 kustomize 설치 (macOS)								
CH01_06. minikube 설치 및 쿠버네티스 클러스터 구성 (Ubuntu)								
CH01_07. minikube 설치 및 쿠버네티스 클러스터 구성 (macOS)								
CH01_08. 테라폼 코드 이용하여 미리 준비된 AWS 실습환경 구성								
Ch 02. 도커를 이용한 컨테이너 관리								
CH02_01. 도커 이미지와 컨테이너								
CH02_02. 도커 컨테이너 다루기 컨테이너 라이프사이클								
CH02_03. 도커 컨테이너 다루기 엔트리포인트와 커맨드								
CH02_04. 도커 컨테이너 다루기 환경변수								
CH02_05. 도커 컨테이너 다루기 명령어 실행								
CH02_06. 도커 컨테이너 다루기 네트워크								
CH02_07. 도커 컨테이너 다루기- 볼륨								
CH02_08. 도커 컨테이너 다루기 로그								
CH02_09. 도커 이미지 다루기- 이미지 빌드								
CH02_10. 도커 이미지 다루기- Dockerfile								
CH02_11. 도커 이미지 다루기- 이미지 압축파일로 저장 및 불러오기								
CH02_12. 도커 이미지 다루기 도커허브 저장소 이용								
CH02_13. 도커 이미지 다루기 AWS ECR 저장소 이용								
CH02_14. 도커 이미지 다루기- 이미지 경량화 전략								
CH02_15. 도커 데몬 디버깅								
CH02_16. 도커 컴포즈- 명시적으로 컨테이너 관리하기								
ch 02_17. 실습 도커 컴포즈 이용하여 Grafana_MySQL 구성								
----------------------------------------------------------------
06. CI/CD(지속적 통합/지속적 제공) 구현하기
Ch 01. CI/CD에 대한 개념 이해								
CH01_00. Orientation								
CH01_01. CI/CD 소개								
CH01_02. CI								
CH01_03. CD								
Ch 02. AWS IaaS를 활용한 CI/CD								
CH02_01. jenkins 개요								
CH02_02. jenkins pipeline 소개								
CH02_03. jenkins pipeline 실습#1 (인프라 구축)								
CH02_04. jenkins pipeline 실습#2 (jenkins 설치)								
CH02_05. jenkins pipeline 실습#2 (jenkins docker로 설치)								
CH02_06. jenkins pipeline 실습#3 (실습 소개)								
CH02_07. jenkins pipeline 실습#3 (Github 연동)								
CH02_08. jenkins pipeline 실습#3 (CI 자동화)								
CH02_09. jenkins pipeline 실습#3 (CD 자동화)								
CH02_10. jenkins pipeline 실습#3 (Slack notification)								
CH02_11. jenkins master-slave 소개 및 실습								
Ch 03. AWS SaaS를 활용한 CI/CD								
CH03_01. jenkins AWS 서비스 연동 소개								
CH03_02. jenkins AWS 서비스 연동 #CodeBuild								
CH03_03. jenkins AWS 서비스 연동 실습 #CodeBuild								
CH03_04. jenkins AWS 서비스 연동 #CodeDeploy								
CH03_05. jenkins AWS 서비스 연동 실습 #CodeDeploy_01								
CH03_06. jenkins AWS 서비스 연동 실습 #CodeDeploy_02								
CH03_07. jenkins AWS 서비스 연동 실습 #CodeDeploy_03								
CH03_08. jenkins AWS 서비스 연동 #CodePipeline								
CH03_09. jenkins AWS 서비스 연동 실습 #CodePipeline								
Ch 04. 외부 SaaS를 활용한 CI/CD								
CH04_01. Github Actions 소개								
CH04_02. Github Actions 실습								
CH04_03. Github Actions 실습 #Custom actions								
CH04_04. CicleCI 소개								
CH04_05. CircleCI 실습								
Ch 05. Kubernetes CI/CD								
CH05_01. Gitops & ArgoCD 소개								
CH05_02. ArgoCD 설치 #local								
CH05_03. ArgoCD 설정 #declarative-setup								
CH05_04. ArgoCD 설정 #app-of-apps								
CH05_05. ArgoCD 설정 #인증1 (local-user)								
CH05_06. ArgoCD 설정 #인증2 (SSO)								
CH05_07. ArgoCD CI-CD #1 (github actions)								
CH05_08. ArgoCD CI.CD 2 (CircleCI)								
================================================================================================================================
한 번에 끝내는 머신러닝과 데이터분석 A-Z 초격차 패키지
----------------------------------------------------------------
01. 머신러닝을 위한 최소한의 수학/통계
01.기초대수학							
대수학적 특징과 항등원, 역원							
집합							
집합의 표함관계							
집합의 연산							
파티션							
함수							
대수함수							
초원함수							
함수의 변형							
선형함수							
Parametric Models							
02.미적분학							
극한							
도함수							
미분법							
체인룰							
Gradient-based Optimization							
다변수함수와 그래디언트							
인공뉴런의 최적화							
벡터하무와 그래디언트							
야코비안과 체인룰							
03.선형대수							
벡터의 연산1							
벡터의 연산2							
행렬의 연산1							
행렬의 연산2							
역행렬							
연립선형방정식							
선형변환							
정사영행렬1							
스칼라정사영과 벡터정사영							
정사영행렬2							
가역선형변환							
행렬의 고유값과 고유벡터							
04.확률							
확률							
확률의 계산							
조건부확률							
베이즈정리							
확률변수							
확률변수의 기댓값과 산포도							
이산, 연속 확률분포							
시그모이드와 소프트맥스							
정보와 엔트로피							
크로스 엔트로피			
----------------------------------------------------------------				
02.파이썬 프로그래밍 기초와 데이터분석
01. 인트로							
과정 소개							
colab 소개							
02. 파이썬 기초							
파이썬의 특징							
변수							
자료형_숫자형							
자료형_문자형							
자료형_리스트							
자료형_튜플							
자료형_딕셔너리							
자료형_셋							
제어문_for							
제어문_while							
제어문_if							
List Comprehension							
함수							
외부 라이브러리 사용							
03. 데이터 전처리							
데이터 프레임 생성							
칼럼명 추출 / 변경							
copy 를 이용한 데이터 복사							
시리즈							
loc 과 iloc 을 이용한 원하는 위치의 데이터 추출							
조건에 맞는 데이터 추출							
정렬							
결측값 처리							
타입 변환							
레코드, 칼럼 추가 / 삭제							
apply, map 을 활용한 데이터 변환							
데이터 프레임 결합_상하결합							
데이터 프레임 결합_좌우결합							
그룹화							
피벗테이블							
파일 호출 / 저장							
04. 데이터 시각화							
matplotlib 을 이용한 단일 차트 그리기							
여러 데이터를 한 차트에 그리기							
subplot / subplots 를 이용한 여러개의 차트 그리기							
load_dataset 을 이용한 데이터 셋 불러오기							
barplot 을 이용한 막대 그래프 그리기							
countplot 을 이용한 막대 그래프 그리기							
scatterplot 을 이용한 산점도 그리기							
lineplot 을 이용한 선도표 그리기							
heatmap 을 이용한 히트맵 그리기							
pie 를 이용한 원형차트 그리기							
boxplot 을 이용한 상자 수염 그림 그리기							
displot / histplot 을 이용한 히스토그램 그리기							
pandas-profiling 을 통한 EDA	
05. 한 걸음 더 나아가기							
머신러닝 소개							
데이터 전처리							
머신러닝 모델 구성 및 결과 검증							
다양한 머신러닝 기술							
딥러닝 소개							
numpy 를 이용한 행렬 연산							
딥러닝 모델 구성 및 결과 검증							
머신러닝 / 딥러닝의 한계							
----------------------------------------------------------------
03. R 프로그래밍 기초와 데이터분석	
01. 데이터 분석 시작 하기							
데이터 분석 왜 해야하나요?							
데이터 분석 어떻게 해야할까요?							
02. Rstudio 이해하기							
R 알아보기							
R studio 사용법							
라이브러리 & 기본 명령어 & 객체 이해하기							
03. 데이터 분석 기본기							
여러 가지 데이터 형태의 이해와 데이터 읽고 저장하기							
데이터의 속성 이해하기							
04. 데이터 기초 가공하기							
컬럼 선택 : SELECT 개념							
컬럼 선택 : SELECT 실습							
컬럼 선택 : FILTER 개념							
컬럼 선택 : FILTER 실습							
컬럼 추가 : MUTATE 개념							
컬럼 추가 : MUTATE 실습							
컬럼 정렬 : ARRANGE 개념							
컬럼 정렬 : ARRANGE 실습							
테이블 병합 : JOIN 개념							
테이블 병합 : JOIN 실습							
05. 데이터 집계와 변환							
테이블 집계 : GROUP_BY | SUMMARISE							
테이블 집계 : GROUP_BY | SUMMARISE 실습							
테이블 변환: Wide / Long format							
테이블 변환: Wide / Long format 실습							
소소한 팁							
실습 A							
실습 B							
06. 데이터 탐색하기							
데이터 분석 기초 프로세스 수립하기							
데이터 분석 전 : 데이터 품질 검토하기							
데이터 분석 중 : 데이터 현황 이해하기							
07. 데이터 시각화 방법론							
데이터 시각화 왜 해야하는가?							
데이터 시각화 어떻게 해야하는가?							
08. 데이터 시각화							
라인 차트							
라인 차트 실습							
바 차트							
바 차트 실습							
이중축							
이중축 실습
----------------------------------------------------------------
04. 머신러닝 알고리즘의 모든 것
01. 머신러닝 소개							
머신러닝이란							
Model Selection							
02. Regression							
Linear Regression							
Linear Regression 심화							
Linear Regression 실습(Python)							
Linear Regression 실습(R)							
Regularization							
당뇨병 진행도 예측(Python)							
당뇨병 진행도 예측(R)							
03. Logistic Regression							
Logtistic Regression							
폐암의 양성 음성 분류(Python)							
폐암의 양성 음성 분류(R)							
04. Decision Tree							
Decision Tree							
Decision Tree Classification 실습(Python)							
Decision Tree Classification 실습(R)							
Decision Tree Regression 실습(Python)							
Decision Tree Regression 실습(R)							
Iris 꽃 종류 분류(Python)							
Iris 꽃 종류 분류(multiclass)(Python)							
Iris 꽃 종류 분류(R)							
Iris 꽃 종류 분류(multiclass)(R)							
Ensemble & Random Forest							
손글씨 분류(Python)							
손글씨 분류(R)							
부동산 가격 예측(Python)							
부동산 가격 예측(R)							
05. Naive Bayes							
Naive Bayes							
Naive Bayes 실습(Python)							
Naive Bayes 실습(R)							
06. KNN							
KNN							
KNN 실습(Python)							
KNN 실습(R)							
음수 가능 여부 판단(Python)							
음수 가능 여부 판단(R)							
07. SVM							
SVM							
SVM 커널 실습(Python)							
SVM 커널 실습(R)							
얼굴 사진 분류(Python)							
얼굴 사진 분류(R)							
08. Clustering							
Clustering							
Non-Hierarchical Clustering							
Hierarchical Clustering 실습(Python)							
Hierarchical Clustering 실습(R)							
Non-Hierarchical Clustering 실습(Python)							
Non-Hierarchical Clustering 실습(R)							
Clustering으로 빈 데이터 채우기(Python)							
Clustering으로 빈 데이터 채우기(R)							
K Means로 이미지 압축(Python)							
09. Dimensionality Reduction							
Dimensionality Reduction							
차원 축소 시각화 실습(Python)							
차원 축소 시각화 실습(R)							
차원 축소와 군집화(Python)							
차원 축소와 군집화(R)							
Eigenface와 얼굴 사진 분류(Python)							
Eigenface와 얼굴 사진 분류(R)							
10. Boosting & Stacking							
Boosting & XGBoost							
Boosting Regression 실습(Python)							
Boosting Regression 실습(R)							
Boosting Classification 실습(Python)							
Boosting Classification 실습(R)							
Boosting 심화							
Boosting Regression 심화 실습(Python)							
Boosting Regression 심화 실습(R)							
Boosting Classification 심화 실습(Python)							
Boosting Classification 심화 실습(R)							
Stacking Regression 실습(Python)							
Stacking Regression 실습(R)							
Stacking Classification 실습(Python)							
Stacking Classification 실습(R)							
11. Anomaly Detection							
Anomaly Detection & Sampling							
Sampling 실습(Python)							
Sampling 실습(R)							
Out-of-Distribution Detection							
Out-of-Distribution Detection 실습(Python)							
Out-of-Distribution Detection 실습(R)							
12. Recommendation System							
Contents Based Filtering							
유사도 함수 실습(Python)							
유사도 함수 실습(R)							
TF-IDF 실습(Python)							
TF-IDF 실습(R)							
Collaborative Filtering							
Collaborative Filtering(2)							
KNN 협업 필터링 실습(Python)							
KNN 협업 필터링 실습(R)							
Matrix Factorization(Python)							
Matrix Factorization(R)							
13. Explainable AI							
LIME							
LIME 실습(Python)							
LIME 실습(R)
----------------------------------------------------------------
05. 파이썬 머신러닝 프로젝트
01. 강의 소개							
강의 목표 및 학습 방법							
Google Colab 환경 사용하기							
강의 자료 및 실습 코드 설치							
02. 데이터 분석과 머신러닝							
일반적인 데이터 분석							
머신러닝 데이터 분석							
실습에 사용할 주요 머신러닝 기법들							
03. [실습1] 보험료 예측하기							
데이터 소개와 분석 프로세스 수립							
데이터 준비 - (1) 중복/데이터 타입							
데이터 준비 - (2) 범주형 변수 처리/결측값							
데이터 준비 - (3) 이상치/상관성 탐색							
다양한 Regression 을 활용한 보험료 예측							
04. [실습2] 대출 상품 투자 위험도 줄이기							
데이터 소개와 분석 프로세스 수립							
데이터 준비 - (1) 데이터 전처리 1							
데이터 준비 - (2) 데이터 전처리 2							
데이터 준비 - (3) Feature 변환 / 결측값 처리							
데이터 준비 - (4) 상관성 탐색 / Target Feature 생성							
CatBoost 를 활용한 분류 예측 모델 생성							
모델 평가 및 Feature Importance							
05. [실습3] HR 데이터를 활용한 직원 이탈 요인 분석							
데이터 소개와 분석 프로세스 수립							
데이터 탐색 및 전처리							
데이터 타입별 Feature 변환 - (1) 숫자형 Feature							
데이터 타입별 Feature 변환 - (1) 범주형 Feature							
상관성에 따른 Feature 정제							
Random Forest / Gradient Boosting 분류 예측 모델 생성							
Grid Search 를 활용한 최적 모델 탐색 및 모델 평가							
Feature Importances							
06. [실습4] 고객 데이터를 활용한 상품 배송 분석							
데이터 소개와 분석 프로세스 수립							
데이터 탐색 및 전처리							
데이터 타입별 Feature 전환							
상관성에 따른 Feature 정제							
고객 정보를 활용한 정시 배송 예측							
Clustering 과 PCA 를 활용한 고객 Segmentation							
07. [실습5] 마케팅을 위한 연관 규칙 분석							
데이터 소개와 분석 프로세스 수립							
데이터 준비를 위한 EDA 및 전처리							
Apriori 알고리즘을 활용한 연관 규칙 분석							
08. [실습6] 반도체 제조 공정 프로세스 Pass&Fail 수율 예측							
데이터 소개와 분석 프로세스 수립							
데이터 탐색 및 전처리							
Target Feature 정의 및 Feature 정제							
Target Feature 불균형 문제 처리							
데이터 준비 및 기본 모델링							
Under/Over Sampling 후 모델링							
PCA 적용 및 이상치 제거							
PCA 적용 및 이상치 제거 후 모델링							
09. [실습7] 자동차 제조 테스트 공정 시간 예측하기							
데이터 소개와 분석 프로세스 수립							
데이터 준비를 위한 EDA 및 전처리							
RandomForest, XGBoost 를 활용한 예측 모델 생성							
다양한 차원 축소 기법을 활용한 Feature Selection							
Stacked Regression Model 적용							
10. [실습8] 제조 공정 예측 유지 보수하기							
데이터 소개와 분석 프로세스 수립							
데이터 준비 - (1) 데이터별 전처리							
데이터 준비 - (2) 데이터별 전처리							
데이터 준비 - (3) Feature 정제							
데이터 준비 - (4) Feature 정제							
XGBoost 를 활용한 모델링과 평가							
11. [실습9] 가스 터빈 추진 플랜트 제조 공정의 부식 예측							
데이터 소개와 분석 프로세스 수립							
데이터 준비 - (1) 데이터 전처리							
데이터 준비 - (2) 상관성 / Feature Selection							
다양한 Regressor 를 활용한 모델 생성과 Hypertuning							
12. [실습10] 제조 공정 내 가스 혼합물의 개별 가스 성분 분류							
데이터 소개와 분석 프로세스 수립							
데이터 준비를 위한 EDA 및 전처리							
PCA 적용							
다양한 Classifier 를 활용한 가스 성분 분류 모델 생성							
Feature Selection 을 활용한 모델링							
13. [실습11] COVID-19 관련 이커머스 상품 판매 데이터 분석							
데이터 소개와 분석 프로세스 수립							
데이터 탐색 및 전처리							
Clustering & PCA 분석 적용해 보기							
구매 선호도 예측 모델 생성하기							
14. [실습12] 온라인 쇼핑몰 고객 Clustering 분석							
데이터 소개와 분석 프로세스 수립							
데이터 탐색 및 전처리 - (1)							
데이터 탐색 및 전처리 - (2)							
데이터 탐색 및 전처리 - (3)							
RFM 고객 분석 해보기							
K-means Clustering 분석 및 Hyperparameters Optimization							
DB-Scan Clustering 분석 및 시각화							
15. [실습13] 소매 판매 데이터를 활용한 이커머스 고객 Segmentation 분석							
데이터 소개와 분석 프로세스 수립							
데이터 탐색 및 전처리 - (1)							
데이터 탐색 및 전처리 - (2)							
데이터 탐색 및 전처리 - (3)							
데이터 탐색 및 전처리 - (4)							
K-means Clustering 분석 및 Silhouette/PCA 분석을 통한 평가							
다양한 Classifier 및 Grid Search 를 활용한 예측 분석 및 평가							
16. [실습14] 시계열 분석을 이용한 Drugstore 매출 예측							
데이터 소개와 분석 프로세스 수립							
데이터 준비 - (1) 데이터 전처리							
데이터 준비 - (2) EDA / 상관성							
시계열 분석 및 Prophet 을 활용한 매출 예측							
17. [실습15] 이커머스 여름 의류 매출 분석							
데이터 소개와 분석 프로세스 수립							
데이터 준비 - (1) 데이터 전처리							
데이터 준비 - (2) EDA							
K-Means Clustering 을 활용한 매출 영향 인자 분석							
다양한 Classifier 를 활용한 매출 예측 - (1)							
다양한 Classifier 를 활용한 매출 예측 - (2)							
----------------------------------------------------------------
06. R 머신러닝 프로젝트
01. [실습1] 통신사 이탈 고객 예측 모형 실습							
개요							
데이터 EDA- NA 값 처리							
데이터 EDA - 기초탐색							
모델링							
인사이트 및 요약							
02. [실습2] 신용카드 연체 고객 예측							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약							
03. [실습3] 고객의 상품 구매 예측하기							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약							
04. [실습4] 비행기 연착 시간 예측하기							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약							
05. [실습5] 택시 요금 예측 예측하기							
분석 목표 및 개요							
데이터 가공							
데이터 EDA							
모델링							
인사이트 및 요약							
06. [실습6] 주택 가격 예측 예측하기							
분석 목표 및 개요							
데이터 가공							
데이터 EDA							
모델링							
인사이트 및 요약							
07. [실습7] 이커머스 고객 세분화하기							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약							
08. [실습8] RFM을 이용해 고객 세분화하기							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약							
09. [실습9] 이커머스 연관상품 구매 예측하기							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약							
10. [실습10] 비디오 연관성 추천 모형 만들기							
분석 목표 및 개요							
데이터 EDA							
모델링							
인사이트 및 요약
----------------------------------------------------------------							
07. 머신러닝 서비스화를 위한 MLOps
01. ML 을 Service 화하기 위한 기술, MLOps							
전통적인 ML 프로젝트 진행 방식의 한계							
ML DevOps = MLOps							
MLOps의 구성요소							
앞으로의 강의에 대하여							
02. Docker, k8s, Cloud							
MLOps에서 쿠버네티스가 필요한 이유							
Docker 기본 개념							
실습환경 준비							
Docker 실습(1)							
Docker 실습(2)							
Docker 실습(3)							
쿠버네티스 기본 개념							
쿠버네티스 실습(1) YAML							
쿠버네티스 실습(2) minikube 1							
쿠버네티스 실습(2) minikube 2							
쿠버네티스 실습(3) Pod							
쿠버네티스 실습(4) Deployment							
쿠버네티스 실습(5) Service							
쿠버네티스 실습(6) PVC							
03. 오픈소스를 통해 알아보는 MLOps의 구성요소							
Data Management 란							
DVC 실습 (1)							
DVC 실습 (2)							
Model Management 란							
MLflow 실습 (1)							
MLflow 실습 (2)							
MLflow 실습 (3)							
MLflow 실습 (4)							
Model Serving 이란							
Flask 실습(1)							
Flask 실습(2)							
Seldon Core 실습(1)							
Seldon Core 실습(2)							
Model Monitoring 이란							
Prometheus & Grafana							
Prometheus & Grafana 실습							
04. 쿠버네티스 위 최적의 MLOps 플랫폼, Kubeflow							
Kubeflow 란?							
Kubeflow 설치							
Kubeflow 기능 살펴보기							
Kubeflow component 와 pipeline 실습(1)							
Kubeflow component 와 pipeline 실습(2)							
Kubeflow component 와 pipeline 실습(3)							
Kubeflow Katib							
Kubeflow Katib 실습							
05. Amazon SageMaker로 알아보는 MLOps							
Amazon sagemaker 계정 생성							
Amazon SageMaker Autopilot 실습							
06. Future works in MLOps							
Future Works in MLOps							
Future Works in MLOps (1)							
----------------------------------------------------------------
08. 딥러닝 에센스
01. 딥러닝							
딥러닝의 이해 및 활용 (1)							
딥러닝의 이해 및 활용 (2)							
02. 딥러닝 핵심 1 : 뉴럴 네트워크							
활성화 함수 및 손실 함수							
최적화 알고리즘의 이해							
역전파 알고리즘							
최적화 기법							
Regularization							
Batch Normormaliztion							
Pytorch 기본							
Pytorch 실습 : MLP 기본							
Pytorch 실습 : MLP 응용							
Tensorflow 기본							
Tensorflow 실습 : MLP 기본							
Tensorflow 실습 : MLP 응용							
Pytorch 실습: wandb를 활용한 시각화							
Tensorflow실습: wandb를 활용한 시각화							
03. 딥러닝 핵심 2 : CNN							
이미지 분류							
데이터 증강 기법							
CNN 기본 개념 1							
CNN 기본 개념 2							
MLP와 CNN 비교							
HyperParameter							
Pytorch 실습 : 데이터 증강 기법 실습							
Pytorch 실습 : CNN을 활용한 이미지 분류 실습							
Pytorch 실습 : Hyper Parameter 실습							
Tensor 실습 : 데이터 증강 기법 실습							
Tensor 실습 : CNN을 활용한 이미지 분류 실습							
Tensor 실습 : Hyper Parameter 실습							
04. 딥러닝 핵심 3 : RNN							
Time Series 문제 및 Sequence Model							
RNN							
LSTM							
Pytorch 실습 : RNN 및 LSTM 구조							
Tensorflow 실습 : RNN 및 LSTM 구조							
05. 머신러닝 vs 딥러닝							
ML : 비트코인 가격 예측							
DL : 비트코인 가격 예측							
ML : 신용카드 사기 분류							
DL : 신용카드 사기 분류							
ML : CIFAR10 이미지 분류							
DL : CIFAR10 이미지 분류
================================================================================================================================
올인원 패키지 : 실시간 빅데이터 처리를 위한 Spark & Flink	
----------------------------------------------------------------
01.소개
인트로					
01. 데이터 엔지니어링에 대하여					
02. Apache Spark					
03. Apache Airflow					
04. Apache Flink					
----------------------------------------------------------------
02. Apache Spark와 데이터 병렬-분산 처리
Apache Spark 시작하기					
01. 빅데이터란?					
02. 데이터 병렬처리와 스케일					
03. 왜 Spark를 배워야 할까?					
04. 데이터 저장 솔루션들					
05. Apache Spark 기초					
06. Spark 3					
병렬처리에서에서 분산처리까지					
01. RDD - Data-Parallel to Distributed Data-Parallel					
02. RDD - Latency					
03. RDD - RDD, 스파크의 병렬 콜렉션					
04. RDD - RDD Transoformation and Actions					
05. 분산처리를 위한 기능들 - Reduction Operations					
06. 분산처리를 위한 기능들 - Pair RDDs					
07. 분산처리를 위한 기능들 - Transformations and Actions on Pair RDDs					
08. 분산처리를 위한 기능들 - Joins					
09.  성능 최적화 및 튜닝 방법 - Partitioning					
10. 성능 최적화 및 튜닝 방법 - Shuffling					
11. 성능 최적화 및 튜닝 방법 - Optimizing with Partitioners					
12. 성능 최적화 및 튜닝 방법 - Wide and Narrow Dependencies
Spark SQL 과 친구들 (DataFrames, Datasets)					
01. Structured vs Unstructured Data					
02. Spark SQL					
03. DataFrames					
04. Datasets					
05. Catalyst Optimizer 및 Tungsten Project 작동원리					
06. ETL with DataFrames					
Spark ML 과 머신러닝 엔지니어링					
01. Spark ML 기초					
02. Classification and Regression using Apache Spark					
03. SparkML Clustering					
04. MLlib 알고리즘					
05. 머신러닝 파이프라인 구성					
06. 모델 평가					
07. 모델 모니터링과 관리					
----------------------------------------------------------------
03. Apache Airflow와 데이터 오케스트레이션
Airflow 소개					
01. 왜 Apache Airflow 인가?					
02. Airflow 동작 원리					
03. Airflow 설치					
04. Airflow CLI					
05. Airflow UI					
나의 첫번째 데이터 파이프라인 구축하기					
01. DAG란?					
02. DAG 만들어보기					
03. DAG Scheduling					
04. Operator 알아보기 - Operators					
05. Operator 알아보기 - Sensors					
06. Operator 알아보기 - Transfer					
07. Table					
08. Backfilling and Catchup					
09. Airflow로 Spark Pipeline 관리하기					
----------------------------------------------------------------
04. Apache Flink와 데이터 스트리밍
Flink 소개					
01. Flink는 무엇이 다를까					
02. Flink 아키택쳐와 생태계					
03. Flink 설치					
04. Flink 프로젝트 시작하기					
데이터셋 API					
01. Flink 코드 관리					
02. Flink 로 단어 세기 - Map					
03. Flink 로 단어 세기 - Flatmap					
04. Flink 로 단어 세기 - Filter					
05. Flink 로 단어 세기 - groupby					
06. Joins - inner join					
07. Joins - left, right & Full outer join					
데이터스트림 API					
01. 데이터는 어디에서 와서 어디로 갈까					
02. 첫번째 데이터 스트림 만들기					
03. 데이터스트림에서 데이터 처리하기 - Reduce					
04. 데이터스트림에서 데이터 처리하기 - Fold					
05. 데이터스트림에서 데이터 처리하기 - Aggregation					
06. 데이터스트림에서 데이터 처리하기 - Split					
07. 데이터스트림에서 데이터 처리하기 - Iterate					
08. 스트리밍 데이터 처리하기 - Window					
09. 문제 풀이하기					
10. 정답 확인하고 틀린 부분 수정하기					
11. 실시간 데이터 처리가 늦어질때 - Watermarks					
12. 실시간 데이터 처리가 늦어질때 - Late elements					
13. 시스템의 실패를 대비하여 - 장애 허용 시스템 : State, Checkpointing					
[종합실습]실시간 데이터 처리해보기					
1. Kafka에서 오는 데이터를 실시간 처리해보자!					

----------------------------------------------------------------

================================================================================================================================
